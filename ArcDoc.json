{
  "openapi": "3.0.1",
  "info": {
    "title": "Rat API v1.0",
    "version": "v1"
  },
  "paths": {
    "/api/Account/Login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "[AllowAnonymous] 登录",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Account/ContextUser": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "查询当前账户的信息. (包含当前账户的权限信息)",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IContextUserWithPrivileges"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Account/ChangePassword": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "修改自己的 password",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Account/InitializeAdminPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "系统初始化时, 初始化 admin 用户的 password",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InitializeAdminPasswordModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitializeAdminPasswordModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InitializeAdminPasswordModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InitializeAdminPasswordModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Account/SetOthersPassword": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "admin 设置其他用户的 password",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOthersPasswordModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOthersPasswordModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOthersPasswordModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOthersPasswordModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/ArcVatNumbers/SelectVatNumbers": {
      "get": {
        "tags": [
          "ArcVatNumbers"
        ],
        "summary": "数据",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Book": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "查询组合列表",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "按某字段排序",
            "schema": {
              "type": "string",
              "description": "按某字段排序",
              "nullable": true
            }
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "description": "是否降序排序",
            "schema": {
              "type": "boolean",
              "description": "是否降序排序"
            }
          },
          {
            "name": "KeyEquals",
            "in": "query",
            "description": "主键等于",
            "schema": {
              "type": "string",
              "description": "主键等于",
              "nullable": true
            }
          },
          {
            "name": "KeyContains",
            "in": "query",
            "description": "主键包含",
            "schema": {
              "type": "string",
              "description": "主键包含",
              "nullable": true
            }
          },
          {
            "name": "EntityEquals",
            "in": "query",
            "description": "arc实体等于",
            "schema": {
              "type": "string",
              "description": "arc实体等于",
              "nullable": true
            }
          },
          {
            "name": "MetalEquals",
            "in": "query",
            "description": "金属品类兼LME标准合约等于",
            "schema": {
              "type": "string",
              "description": "金属品类兼LME标准合约等于",
              "nullable": true
            }
          },
          {
            "name": "ActiveEquals",
            "in": "query",
            "description": "启用状态等于",
            "schema": {
              "type": "string",
              "description": "启用状态等于",
              "nullable": true
            }
          },
          {
            "name": "StrategyTypeEquals",
            "in": "query",
            "description": "策略类型等于",
            "schema": {
              "type": "string",
              "description": "策略类型等于",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketsIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Book"
        ],
        "summary": "新建组合",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Markets"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Markets"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Markets"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Markets"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Book/{key}": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "按组合名 查询组合",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Markets"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Book"
        ],
        "summary": "修改组合",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Markets"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Markets"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Markets"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Markets"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Book"
        ],
        "summary": "删除组合",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Charges": {
      "get": {
        "tags": [
          "Charges"
        ],
        "summary": "查询Charges列表",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeModelIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Charges"
        ],
        "summary": "新建Charges",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Charges/{key}": {
      "put": {
        "tags": [
          "Charges"
        ],
        "summary": "修改Charges",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Cities": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "查询城市列表",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "按某字段排序",
            "schema": {
              "type": "string",
              "description": "按某字段排序",
              "nullable": true
            }
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "description": "是否降序排序",
            "schema": {
              "type": "boolean",
              "description": "是否降序排序"
            }
          },
          {
            "name": "KeyEquals",
            "in": "query",
            "description": "主键等于",
            "schema": {
              "type": "string",
              "description": "主键等于",
              "nullable": true
            }
          },
          {
            "name": "KeyContains",
            "in": "query",
            "description": "主键包含",
            "schema": {
              "type": "string",
              "description": "主键包含",
              "nullable": true
            }
          },
          {
            "name": "GeographicalEquals",
            "in": "query",
            "description": "地理名等于",
            "schema": {
              "type": "string",
              "description": "地理名等于",
              "nullable": true
            }
          },
          {
            "name": "GeographicalContains",
            "in": "query",
            "description": "地理名包含",
            "schema": {
              "type": "string",
              "description": "地理名包含",
              "nullable": true
            }
          },
          {
            "name": "CountryEquals",
            "in": "query",
            "description": "国家地区等于",
            "schema": {
              "type": "string",
              "description": "国家地区等于",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CitiesIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Cities"
        ],
        "summary": "新建城市",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Cities/{key}": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "按城市名 查询城市",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cities"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Cities"
        ],
        "summary": "修改城市",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Cities"
        ],
        "summary": "删除城市",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Cities/SelectOptions": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "城市的下拉框简单选项",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Commodities": {
      "get": {
        "tags": [
          "Commodities"
        ],
        "summary": "查询物料列表",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "按某字段排序",
            "schema": {
              "type": "string",
              "description": "按某字段排序",
              "nullable": true
            }
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "description": "是否降序排序",
            "schema": {
              "type": "boolean",
              "description": "是否降序排序"
            }
          },
          {
            "name": "KeyEquals",
            "in": "query",
            "description": "主键等于",
            "schema": {
              "type": "string",
              "description": "主键等于",
              "nullable": true
            }
          },
          {
            "name": "KeyContains",
            "in": "query",
            "description": "主键包含",
            "schema": {
              "type": "string",
              "description": "主键包含",
              "nullable": true
            }
          },
          {
            "name": "MetalEquals",
            "in": "query",
            "description": "金属品类兼LME标准合约等于",
            "schema": {
              "type": "string",
              "description": "金属品类兼LME标准合约等于",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommoditiesIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Commodities"
        ],
        "summary": "新建物料",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Commodities"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Commodities"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Commodities"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Commodities"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Commodities/{key}": {
      "get": {
        "tags": [
          "Commodities"
        ],
        "summary": "按物料名 查询物料",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Commodities"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Commodities"
        ],
        "summary": "修改物料",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Commodities"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Commodities"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Commodities"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Commodities"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Commodities"
        ],
        "summary": "删除物料",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Comptes": {
      "get": {
        "tags": [
          "Comptes"
        ],
        "summary": "查询用户列表",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "按某字段排序",
            "schema": {
              "type": "string",
              "description": "按某字段排序",
              "nullable": true
            }
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "description": "是否降序排序",
            "schema": {
              "type": "boolean",
              "description": "是否降序排序"
            }
          },
          {
            "name": "KeyEquals",
            "in": "query",
            "description": "主键等于",
            "schema": {
              "type": "string",
              "description": "主键等于",
              "nullable": true
            }
          },
          {
            "name": "KeyContains",
            "in": "query",
            "description": "主键包含",
            "schema": {
              "type": "string",
              "description": "主键包含",
              "nullable": true
            }
          },
          {
            "name": "NomEquals",
            "in": "query",
            "description": "姓名等于",
            "schema": {
              "type": "string",
              "description": "姓名等于",
              "nullable": true
            }
          },
          {
            "name": "NomContains",
            "in": "query",
            "description": "姓名包含",
            "schema": {
              "type": "string",
              "description": "姓名包含",
              "nullable": true
            }
          },
          {
            "name": "EnvironementEquals",
            "in": "query",
            "description": "角色等于",
            "schema": {
              "type": "string",
              "description": "角色等于",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComptesIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Comptes"
        ],
        "summary": "新建用户",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComptesCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComptesCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComptesCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComptesCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Comptes/{key}": {
      "get": {
        "tags": [
          "Comptes"
        ],
        "summary": "按用户名查询用户",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comptes"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Comptes"
        ],
        "summary": "修改用户",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComptesUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComptesUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComptesUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComptesUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Comptes"
        ],
        "summary": "删除用户",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Comptes/SelectOptions": {
      "get": {
        "tags": [
          "Comptes"
        ],
        "summary": "用户的下拉框简单选项",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Comptes/Traders": {
      "get": {
        "tags": [
          "Comptes"
        ],
        "summary": "业务员 Traders 的下拉框简单选项",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Comptes"
        ],
        "summary": "新建 业务员",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Traders"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Traders"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Traders"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Traders"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Comptes"
        ],
        "summary": "删除 业务员",
        "parameters": [
          {
            "name": "traderName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/ContractNumbers": {
      "get": {
        "tags": [
          "ContractNumbers"
        ],
        "summary": "查询合同号列表",
        "parameters": [
          {
            "name": "Contract",
            "in": "query",
            "description": "合同编号",
            "schema": {
              "type": "string",
              "description": "合同编号",
              "nullable": true
            }
          },
          {
            "name": "Counterpart",
            "in": "query",
            "description": "客户名称",
            "schema": {
              "type": "string",
              "description": "客户名称",
              "nullable": true
            }
          },
          {
            "name": "Pic",
            "in": "query",
            "description": "执行人员",
            "schema": {
              "type": "string",
              "description": "执行人员",
              "nullable": true
            }
          },
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewContractsIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "ContractNumbers"
        ],
        "summary": "新建合同号",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewContractsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewContractsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewContractsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewContractsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/ContractNumbers/{key}": {
      "put": {
        "tags": [
          "ContractNumbers"
        ],
        "summary": "修改合同号",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewContractsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewContractsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewContractsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewContractsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ContractNumbers"
        ],
        "summary": "删除合同号",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "ContractNumbers"
        ],
        "summary": "获取一行",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewContracts"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Counterparts": {
      "get": {
        "tags": [
          "Counterparts"
        ],
        "summary": "查询公司列表. (physical contract new : OpeningBank 的数据源是 Type1为 'Bank' 的公司)",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "按某字段排序",
            "schema": {
              "type": "string",
              "description": "按某字段排序",
              "nullable": true
            }
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "description": "是否降序排序",
            "schema": {
              "type": "boolean",
              "description": "是否降序排序"
            }
          },
          {
            "name": "KeyEquals",
            "in": "query",
            "description": "主键等于",
            "schema": {
              "type": "string",
              "description": "主键等于",
              "nullable": true
            }
          },
          {
            "name": "KeyContains",
            "in": "query",
            "description": "主键包含",
            "schema": {
              "type": "string",
              "description": "主键包含",
              "nullable": true
            }
          },
          {
            "name": "LegalNameEquals",
            "in": "query",
            "description": "法定名称等于",
            "schema": {
              "type": "string",
              "description": "法定名称等于",
              "nullable": true
            }
          },
          {
            "name": "LegalNameContains",
            "in": "query",
            "description": "法定名称包含",
            "schema": {
              "type": "string",
              "description": "法定名称包含",
              "nullable": true
            }
          },
          {
            "name": "AddressContains",
            "in": "query",
            "description": "地址包含",
            "schema": {
              "type": "string",
              "description": "地址包含",
              "nullable": true
            }
          },
          {
            "name": "CountryEquals",
            "in": "query",
            "description": "国家地区等于",
            "schema": {
              "type": "string",
              "description": "国家地区等于",
              "nullable": true
            }
          },
          {
            "name": "Type1Equals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "EntityEquals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "BankDetailsContains",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "AccountCodeEquals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "SageNb",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CurEquals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "BrokerCodeEquals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "CompanyGroupEquals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "CompanyGroupContains",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "CreditLineLowerBound",
            "in": "query",
            "description": "",
            "schema": {
              "type": "number",
              "description": "",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "CreditLineUpperBound",
            "in": "query",
            "description": "",
            "schema": {
              "type": "number",
              "description": "",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "CreditLineCurrencyEquals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "CreditLineExpiryLowerBound",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreditLineExpiryUpperBound",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "IntermediaryEquals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "BankTier",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CheckedEquals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "IssuingBankEquals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "AdvisingBankEquals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "RecourseEquals",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "KycDateLowerBound",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "KycDateUpperBound",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CounterpartsIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Counterparts"
        ],
        "summary": "新建公司",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparts"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparts"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparts"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Counterparts/{key}": {
      "get": {
        "tags": [
          "Counterparts"
        ],
        "summary": "按公司名 查询公司",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Counterparts"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Counterparts"
        ],
        "summary": "修改公司",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparts"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparts"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparts"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Counterparts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Counterparts"
        ],
        "summary": "删除公司",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Counterparts/SelectOptions": {
      "get": {
        "tags": [
          "Counterparts"
        ],
        "summary": "公司的下拉框简单选项",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Counterparts/CompanyGroups": {
      "get": {
        "tags": [
          "Counterparts"
        ],
        "summary": "公司组 列表",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/CounterpartsVat/CounterpartVatNumber": {
      "get": {
        "tags": [
          "CounterpartsVat"
        ],
        "summary": "Customer's VAT number",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Currency": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "获取币种列表",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrenciesIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Currency"
        ],
        "summary": "新建币种",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Currencies"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currencies"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Currencies"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Currencies"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Currency/{key}": {
      "put": {
        "tags": [
          "Currency"
        ],
        "summary": "修改币种",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Currency",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Currency",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Currencies"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currencies"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Currencies"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Currencies"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Currency/GetCurrencies": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "获取所有币种",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Entities": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "查询实体列表",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "按某字段排序",
            "schema": {
              "type": "string",
              "description": "按某字段排序",
              "nullable": true
            }
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "description": "是否降序排序",
            "schema": {
              "type": "boolean",
              "description": "是否降序排序"
            }
          },
          {
            "name": "KeyEquals",
            "in": "query",
            "description": "主键等于",
            "schema": {
              "type": "string",
              "description": "主键等于",
              "nullable": true
            }
          },
          {
            "name": "KeyContains",
            "in": "query",
            "description": "主键包含",
            "schema": {
              "type": "string",
              "description": "主键包含",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "新建实体",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Entities"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Entities"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Entities"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Entities"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Entities/{key}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "按实体名 查询实体",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entities"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Entities"
        ],
        "summary": "修改实体",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Entities"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Entities"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Entities"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Entities"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Entities"
        ],
        "summary": "删除实体",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Entities/SelectOptions": {
      "get": {
        "tags": [
          "Entities"
        ],
        "summary": "实体的下拉框简单选项",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/Privilege": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "权限列表",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/BooleanEnumYn": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "是否",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/BooleanEnumPriced": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "是否作价已完成",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/PurchaseSale": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "采购销售方向",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/LcRecourse": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "信用证追索权",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/ContractType": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "合同类型",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/ApprovalStatus": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "审批状态",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/InvoiceStatus": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "发票状态",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/InvoiceDocTypes": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "发票文档类型",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/ChargeType": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "ChargeType",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/StrategyType": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "业务组合的策略类型",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/CounterpartType": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "公司类型",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/PriceFormula": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "作价方式",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/ExchangeProcessType": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "货款方式. (Physical Contracts new : Payment terms : Payment_before_after)",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/PaymentFormType": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "支付形式. (Physical Contracts new : Payment terms : Payment_type)",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/ReinvoicingType": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "合同信用证贴现费类型. (physical contract new : Reinvoicing : Type)",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Enum/FinanceOperationTypes": {
      "get": {
        "tags": [
          "Enum"
        ],
        "summary": "融资操作类型",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/error": {
      "get": {
        "tags": [
          "Error"
        ],
        "summary": "Exception Handler",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Error"
        ],
        "summary": "Exception Handler",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Error"
        ],
        "summary": "Exception Handler",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Error"
        ],
        "summary": "Exception Handler",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Fxcodes": {
      "get": {
        "tags": [
          "Fxcodes"
        ],
        "summary": "查询外汇汇率来源列表",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "按某字段排序",
            "schema": {
              "type": "string",
              "description": "按某字段排序",
              "nullable": true
            }
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "description": "是否降序排序",
            "schema": {
              "type": "boolean",
              "description": "是否降序排序"
            }
          },
          {
            "name": "KeyEquals",
            "in": "query",
            "description": "主键等于",
            "schema": {
              "type": "string",
              "description": "主键等于",
              "nullable": true
            }
          },
          {
            "name": "KeyContains",
            "in": "query",
            "description": "主键包含",
            "schema": {
              "type": "string",
              "description": "主键包含",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FxcodesIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Fxcodes"
        ],
        "summary": "新建外汇汇率来源",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Fxcodes"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fxcodes"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Fxcodes"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Fxcodes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Fxcodes/{key}": {
      "get": {
        "tags": [
          "Fxcodes"
        ],
        "summary": "按外汇汇率来源名 查询外汇汇率来源",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fxcodes"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Fxcodes"
        ],
        "summary": "修改外汇汇率来源",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Fxcodes"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fxcodes"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Fxcodes"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Fxcodes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Fxcodes"
        ],
        "summary": "删除外汇汇率来源",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Fxcodes/SelectOptions": {
      "get": {
        "tags": [
          "Fxcodes"
        ],
        "summary": "外汇汇率来源的下拉框简单选项",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/InvoiceAlloctions/InvoicesAllocationData": {
      "get": {
        "tags": [
          "InvoiceAlloctions"
        ],
        "summary": "获取数据",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoicesAllocationDataModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "获取销售发票列表",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "ContractEquals",
            "in": "query",
            "description": "合同号",
            "schema": {
              "type": "string",
              "description": "合同号",
              "nullable": true
            }
          },
          {
            "name": "CounterpartEquals",
            "in": "query",
            "description": "客户名称",
            "schema": {
              "type": "string",
              "description": "客户名称",
              "nullable": true
            }
          },
          {
            "name": "StatusEquals",
            "in": "query",
            "description": "状态",
            "schema": {
              "type": "string",
              "description": "状态",
              "nullable": true
            }
          },
          {
            "name": "InvoiceNumberContains",
            "in": "query",
            "description": "发票号",
            "schema": {
              "type": "string",
              "description": "发票号",
              "nullable": true
            }
          },
          {
            "name": "CurrencyEquals",
            "in": "query",
            "description": "币种",
            "schema": {
              "type": "string",
              "description": "币种",
              "nullable": true
            }
          },
          {
            "name": "PayTermsEquals",
            "in": "query",
            "description": "付款方式",
            "schema": {
              "type": "string",
              "description": "付款方式",
              "nullable": true
            }
          },
          {
            "name": "InvoiceDateEquals",
            "in": "query",
            "description": "发票日期",
            "schema": {
              "type": "string",
              "description": "发票日期",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "DueDateEquals",
            "in": "query",
            "description": "截止日期",
            "schema": {
              "type": "string",
              "description": "截止日期",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LastPaymentDateEquals",
            "in": "query",
            "description": "最近付款时间",
            "schema": {
              "type": "string",
              "description": "最近付款时间",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "OverduesEquals",
            "in": "query",
            "description": "是否过期",
            "schema": {
              "type": "boolean",
              "description": "是否过期",
              "nullable": true
            }
          },
          {
            "name": "Lot",
            "in": "query",
            "description": "Lot",
            "schema": {
              "type": "integer",
              "description": "Lot",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceListModelIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "新建销售发票",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAddOrEditModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAddOrEditModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAddOrEditModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAddOrEditModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "修改销售发票",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAddOrEditModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAddOrEditModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAddOrEditModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAddOrEditModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Invoices/{key}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "按发票号查询销售发票",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Invoices"
        ],
        "summary": "删除销售发票",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Invoices/AdjustedInvoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "获取临时发票列表",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Invoices/GetNumberByContractLot": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Interests calculated on invoice",
        "parameters": [
          {
            "name": "contract",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "lot",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/InvoicesDocs": {
      "post": {
        "tags": [
          "InvoicesDocs"
        ],
        "summary": "新建InvoicesDocs",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoicesDocs"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoicesDocs"
                },
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoicesDocs"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoicesDocs"
                },
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Lcs": {
      "get": {
        "tags": [
          "Lcs"
        ],
        "summary": "获取信用证列表",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LcsQuery"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LcsQuery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LcsQuery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LcsQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LcsIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Lcs"
        ],
        "summary": "添加信用证",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Lcs"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lcs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Lcs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Lcs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Lcs/{key}": {
      "get": {
        "tags": [
          "Lcs"
        ],
        "summary": "获取信用证查看",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "LcId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "LcId",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lcs"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Lcs"
        ],
        "summary": "修改信用证",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "LcId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "LcId",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Lcs"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lcs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Lcs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Lcs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Lots/GetLots": {
      "get": {
        "tags": [
          "Lots"
        ],
        "summary": "获取ContractLot列表",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QpExtensionLotModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/MaterialAllocationsDetails/SelecAlloction": {
      "get": {
        "tags": [
          "MaterialAllocationsDetails"
        ],
        "summary": "获取allocations(Invoices new alloction,purchase invoice new alloction)",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectAlloctionDataModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Metals": {
      "get": {
        "tags": [
          "Metals"
        ],
        "summary": "查询金属品类兼LME标准合约列表",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "按某字段排序",
            "schema": {
              "type": "string",
              "description": "按某字段排序",
              "nullable": true
            }
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "description": "是否降序排序",
            "schema": {
              "type": "boolean",
              "description": "是否降序排序"
            }
          },
          {
            "name": "KeyEquals",
            "in": "query",
            "description": "主键等于",
            "schema": {
              "type": "string",
              "description": "主键等于",
              "nullable": true
            }
          },
          {
            "name": "KeyContains",
            "in": "query",
            "description": "主键包含",
            "schema": {
              "type": "string",
              "description": "主键包含",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetalsIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Metals"
        ],
        "summary": "新建金属品类兼LME标准合约",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Metals"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metals"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Metals"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Metals"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Metals/{key}": {
      "get": {
        "tags": [
          "Metals"
        ],
        "summary": "按金属品类兼LME标准合约名 查询金属品类兼LME标准合约",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metals"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Metals"
        ],
        "summary": "修改金属品类兼LME标准合约",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Metals"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metals"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Metals"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Metals"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Metals"
        ],
        "summary": "删除金属品类兼LME标准合约",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Metals/SelectOptions": {
      "get": {
        "tags": [
          "Metals"
        ],
        "summary": "金属品类兼LME标准合约的下拉框简单选项",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PaymentTerms": {
      "get": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "列表",
        "parameters": [
          {
            "name": "PaymentTermsCodeContains",
            "in": "query",
            "description": "Code包含",
            "schema": {
              "type": "string",
              "description": "Code包含",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model_PaymentTermsIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "新建",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PaymentTerms"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PaymentTerms"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PaymentTerms"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PaymentTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PaymentTerms/{key}": {
      "get": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "查看",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model_PaymentTerms"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "修改",
        "parameters": [
          {
            "name": "Key",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PaymentTerms"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PaymentTerms"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PaymentTerms"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PaymentTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "删除",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PaymentTerms/SelectPaymentTerms": {
      "get": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "获取下拉框数据",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model_PaymentTerms"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PayTerms": {
      "get": {
        "tags": [
          "PayTerms"
        ],
        "summary": "列表",
        "parameters": [
          {
            "name": "PaytermsContains",
            "in": "query",
            "description": "Payterms包含",
            "schema": {
              "type": "string",
              "description": "Payterms包含",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model_PayTermsIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "PayTerms"
        ],
        "summary": "新建",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PayTerms"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PayTerms"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PayTerms"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PayTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PayTerms/{key}": {
      "get": {
        "tags": [
          "PayTerms"
        ],
        "summary": "查看",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model_PayTerms"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "PayTerms"
        ],
        "summary": "修改",
        "parameters": [
          {
            "name": "Key",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PayTerms"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PayTerms"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PayTerms"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Model_PayTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PayTerms"
        ],
        "summary": "删除",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PayTerms/SelectPayTerms": {
      "get": {
        "tags": [
          "PayTerms"
        ],
        "summary": "获取下拉框数据",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model_PayTerms"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PhysicalContracts": {
      "get": {
        "tags": [
          "PhysicalContracts"
        ],
        "summary": "获取合同列表",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "ContractDateEquals",
            "in": "query",
            "description": "合同日期",
            "schema": {
              "type": "string",
              "description": "合同日期",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ContractContains",
            "in": "query",
            "description": "合同号",
            "schema": {
              "type": "string",
              "description": "合同号",
              "nullable": true
            }
          },
          {
            "name": "PsEquals",
            "in": "query",
            "description": "采购/销售(P-采购，s-销售)",
            "schema": {
              "type": "string",
              "description": "采购/销售(P-采购，s-销售)",
              "nullable": true
            }
          },
          {
            "name": "MarketEquals",
            "in": "query",
            "description": "业务组合",
            "schema": {
              "type": "string",
              "description": "业务组合",
              "nullable": true
            }
          },
          {
            "name": "CommodityEquals",
            "in": "query",
            "description": "品种",
            "schema": {
              "type": "string",
              "description": "品种",
              "nullable": true
            }
          },
          {
            "name": "CounterpartEquals",
            "in": "query",
            "description": "客户名称",
            "schema": {
              "type": "string",
              "description": "客户名称",
              "nullable": true
            }
          },
          {
            "name": "GroupEquals",
            "in": "query",
            "description": "客户所属组名",
            "schema": {
              "type": "string",
              "description": "客户所属组名",
              "nullable": true
            }
          },
          {
            "name": "FormulaEquals",
            "in": "query",
            "description": "点价方式",
            "schema": {
              "type": "string",
              "description": "点价方式",
              "nullable": true
            }
          },
          {
            "name": "ApproveStatusEquals",
            "in": "query",
            "description": "审批状态",
            "schema": {
              "type": "string",
              "description": "审批状态",
              "nullable": true
            }
          },
          {
            "name": "TraderEquals",
            "in": "query",
            "description": "业务员",
            "schema": {
              "type": "string",
              "description": "业务员",
              "nullable": true
            }
          },
          {
            "name": "PicEquals",
            "in": "query",
            "description": "执行人员",
            "schema": {
              "type": "string",
              "description": "执行人员",
              "nullable": true
            }
          },
          {
            "name": "ContractTypeEquals",
            "in": "query",
            "description": "合同类型",
            "schema": {
              "type": "string",
              "description": "合同类型",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalContractModelIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "PhysicalContracts"
        ],
        "summary": "新建合同",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractsCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractsCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractsCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractsCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PhysicalContracts/{key}": {
      "get": {
        "tags": [
          "PhysicalContracts"
        ],
        "summary": "按合同号获取合同",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalContractViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "PhysicalContracts"
        ],
        "summary": "修改合同",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractsUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractsUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractsUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractsUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PhysicalContracts"
        ],
        "summary": "删除合同",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PhysicalContracts/Complete": {
      "put": {
        "tags": [
          "PhysicalContracts"
        ],
        "summary": "完成",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalContractCompleteInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalContractCompleteInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalContractCompleteInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalContractCompleteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PhysicalContracts/GenerateContract": {
      "post": {
        "tags": [
          "PhysicalContracts"
        ],
        "summary": "生成合同号",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContractInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContractInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContractInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContractInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PhysicalContracts/Lots/SelectOptions": {
      "get": {
        "tags": [
          "PhysicalContracts"
        ],
        "summary": "查询批次合同下拉框选项.\r\n<br>\r\n(purchase invoice new : Purchase contract : 按 合同方向 对方公司 过滤, 按 合同日期 降序 排序)\r\n\r\n(invoice new : Sales contract : 按 合同方向 对方公司 过滤, 按 合同日期 降序 排序)",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "按某字段排序",
            "schema": {
              "type": "string",
              "description": "按某字段排序",
              "nullable": true
            }
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "description": "是否降序排序",
            "schema": {
              "type": "boolean",
              "description": "是否降序排序"
            }
          },
          {
            "name": "ContractEquals",
            "in": "query",
            "description": "合同号等于",
            "schema": {
              "type": "string",
              "description": "合同号等于",
              "nullable": true
            }
          },
          {
            "name": "LotEquals",
            "in": "query",
            "description": "合同批次号等于",
            "schema": {
              "type": "integer",
              "description": "合同批次号等于",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PsEquals",
            "in": "query",
            "description": "合同方向等于",
            "schema": {
              "type": "string",
              "description": "合同方向等于",
              "nullable": true
            }
          },
          {
            "name": "CounterpartEquals",
            "in": "query",
            "description": "合同对方公司等于",
            "schema": {
              "type": "string",
              "description": "合同对方公司等于",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotsOptionsIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PhysicalContracts/Lots/SelectOptions/SalesInvoicePurchaseLot": {
      "get": {
        "tags": [
          "PhysicalContracts"
        ],
        "summary": "销售发票的采购批次合同下拉框选项. (invoice new : Purchase contract)",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotsOptionsIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Pricings": {
      "get": {
        "tags": [
          "Pricings"
        ],
        "summary": "查询点价列表",
        "parameters": [
          {
            "name": "Lot",
            "in": "query",
            "description": "Lot号",
            "schema": {
              "type": "number",
              "description": "Lot号",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "ContractEquals",
            "in": "query",
            "description": "合同号",
            "schema": {
              "type": "string",
              "description": "合同号",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Pricings"
        ],
        "summary": "新建点价",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Pricing"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pricing"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Pricing"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Pricing"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Pricings/{contract}-{lot}-{pricingNumber}": {
      "get": {
        "tags": [
          "Pricings"
        ],
        "summary": "获取点价",
        "parameters": [
          {
            "name": "contract",
            "in": "path",
            "description": "合同号",
            "required": true,
            "schema": {
              "type": "string",
              "description": "合同号",
              "nullable": true
            }
          },
          {
            "name": "lot",
            "in": "path",
            "description": "lot号",
            "required": true,
            "schema": {
              "type": "number",
              "description": "lot号",
              "format": "double"
            }
          },
          {
            "name": "pricingNumber",
            "in": "path",
            "description": "点价号",
            "required": true,
            "schema": {
              "type": "number",
              "description": "点价号",
              "format": "double"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pricing"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Pricings"
        ],
        "summary": "修改点价",
        "parameters": [
          {
            "name": "contract",
            "in": "path",
            "description": "合同号",
            "required": true,
            "schema": {
              "type": "string",
              "description": "合同号",
              "nullable": true
            }
          },
          {
            "name": "lot",
            "in": "path",
            "description": "lot号",
            "required": true,
            "schema": {
              "type": "number",
              "description": "lot号",
              "format": "double"
            }
          },
          {
            "name": "pricingNumber",
            "in": "path",
            "description": "点价号",
            "required": true,
            "schema": {
              "type": "number",
              "description": "点价号",
              "format": "double"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Pricing"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pricing"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Pricing"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Pricing"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Pricings"
        ],
        "summary": "删除点价",
        "parameters": [
          {
            "name": "contract",
            "in": "path",
            "description": "合同号",
            "required": true,
            "schema": {
              "type": "string",
              "description": "合同号",
              "nullable": true
            }
          },
          {
            "name": "lot",
            "in": "path",
            "description": "lot号",
            "required": true,
            "schema": {
              "type": "number",
              "description": "lot号",
              "format": "double"
            }
          },
          {
            "name": "pricingNumber",
            "in": "path",
            "description": "点价号",
            "required": true,
            "schema": {
              "type": "number",
              "description": "点价号",
              "format": "double"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PurchInvoices": {
      "get": {
        "tags": [
          "PurchInvoices"
        ],
        "summary": "获取采购发票列表",
        "parameters": [
          {
            "name": "ContractEquals",
            "in": "query",
            "description": "合同号",
            "schema": {
              "type": "string",
              "description": "合同号",
              "nullable": true
            }
          },
          {
            "name": "CounterpartEquals",
            "in": "query",
            "description": "客户名称",
            "schema": {
              "type": "string",
              "description": "客户名称",
              "nullable": true
            }
          },
          {
            "name": "StatusEquals",
            "in": "query",
            "description": "状态",
            "schema": {
              "type": "string",
              "description": "状态",
              "nullable": true
            }
          },
          {
            "name": "InvoiceNumberContains",
            "in": "query",
            "description": "发票号",
            "schema": {
              "type": "string",
              "description": "发票号",
              "nullable": true
            }
          },
          {
            "name": "InvoiceDateEquals",
            "in": "query",
            "description": "发票日期",
            "schema": {
              "type": "string",
              "description": "发票日期",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LastPaymentDateEquals",
            "in": "query",
            "description": "付款时间",
            "schema": {
              "type": "string",
              "description": "付款时间",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "DueDateEquals",
            "in": "query",
            "description": "截至日期",
            "schema": {
              "type": "string",
              "description": "截至日期",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CurrencyEquals",
            "in": "query",
            "description": "币种",
            "schema": {
              "type": "string",
              "description": "币种",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchInvoicesListModelIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "PurchInvoices"
        ],
        "summary": "新建采购发票",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchInvoicesAddOrEditModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchInvoicesAddOrEditModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchInvoicesAddOrEditModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchInvoicesAddOrEditModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "PurchInvoices"
        ],
        "summary": "修改采购发票",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchInvoicesAddOrEditModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchInvoicesAddOrEditModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchInvoicesAddOrEditModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchInvoicesAddOrEditModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PurchInvoices/{key}": {
      "get": {
        "tags": [
          "PurchInvoices"
        ],
        "summary": "按发票号查询采购发票",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchInvoicesViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PurchInvoices"
        ],
        "summary": "删除采购发票",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/PurchInvoices/GetNumberByContractLot": {
      "get": {
        "tags": [
          "PurchInvoices"
        ],
        "summary": "ProvisionnalInvoice",
        "parameters": [
          {
            "name": "contract",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "lot",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/QpExtensions": {
      "get": {
        "tags": [
          "QpExtensions"
        ],
        "summary": "查询延期点价列表",
        "parameters": [
          {
            "name": "Lot",
            "in": "query",
            "description": "Lot号",
            "schema": {
              "type": "integer",
              "description": "Lot号",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "ContractEquals",
            "in": "query",
            "description": "合同号",
            "schema": {
              "type": "string",
              "description": "合同号",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QpExtensionsIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "QpExtensions"
        ],
        "summary": "新建延期点价",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/QpExtensions"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QpExtensions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/QpExtensions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/QpExtensions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/QpExtensions/{contract}-{lot}-{pricingNumber}": {
      "get": {
        "tags": [
          "QpExtensions"
        ],
        "summary": "获取延迟点价",
        "parameters": [
          {
            "name": "contract",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "lot",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "pricingNumber",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QpExtensions"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "QpExtensions"
        ],
        "summary": "修改延期点价",
        "parameters": [
          {
            "name": "contract",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "lot",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "pricingNumber",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/QpExtensions"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QpExtensions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/QpExtensions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/QpExtensions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "QpExtensions"
        ],
        "summary": "删除延迟点价",
        "parameters": [
          {
            "name": "contract",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "lot",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "pricingNumber",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Quotationcodes": {
      "get": {
        "tags": [
          "Quotationcodes"
        ],
        "summary": "查询LME连续具体合约及行情价类型列表",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "按某字段排序",
            "schema": {
              "type": "string",
              "description": "按某字段排序",
              "nullable": true
            }
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "description": "是否降序排序",
            "schema": {
              "type": "boolean",
              "description": "是否降序排序"
            }
          },
          {
            "name": "KeyEquals",
            "in": "query",
            "description": "主键等于",
            "schema": {
              "type": "string",
              "description": "主键等于",
              "nullable": true
            }
          },
          {
            "name": "KeyContains",
            "in": "query",
            "description": "主键包含",
            "schema": {
              "type": "string",
              "description": "主键包含",
              "nullable": true
            }
          },
          {
            "name": "MetalEquals",
            "in": "query",
            "description": "金属品类兼LME标准合约等于",
            "schema": {
              "type": "string",
              "description": "金属品类兼LME标准合约等于",
              "nullable": true
            }
          },
          {
            "name": "CurrencyEquals",
            "in": "query",
            "description": "币种等于",
            "schema": {
              "type": "string",
              "description": "币种等于",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuotationcodesIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Quotationcodes"
        ],
        "summary": "新建LME连续具体合约及行情价类型",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Quotationcodes"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Quotationcodes"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Quotationcodes"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Quotationcodes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Quotationcodes/{key}": {
      "get": {
        "tags": [
          "Quotationcodes"
        ],
        "summary": "按LME连续具体合约及行情价类型名 查询LME连续具体合约及行情价类型",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quotationcodes"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Quotationcodes"
        ],
        "summary": "修改LME连续具体合约及行情价类型",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Quotationcodes"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Quotationcodes"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Quotationcodes"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Quotationcodes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Quotationcodes"
        ],
        "summary": "删除LME连续具体合约及行情价类型",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Role": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "查询角色列表",
        "parameters": [
          {
            "name": "Pagination.CurrentPage",
            "in": "query",
            "description": "缺省为第一页",
            "schema": {
              "type": "integer",
              "description": "缺省为第一页",
              "format": "int32"
            }
          },
          {
            "name": "Pagination.PageSize",
            "in": "query",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "schema": {
              "type": "integer",
              "description": "缺省为15。若设置为小于等于0的值，则不分页。",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "按某字段排序",
            "schema": {
              "type": "string",
              "description": "按某字段排序",
              "nullable": true
            }
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "description": "是否降序排序",
            "schema": {
              "type": "boolean",
              "description": "是否降序排序"
            }
          },
          {
            "name": "KeyEquals",
            "in": "query",
            "description": "主键等于",
            "schema": {
              "type": "string",
              "description": "主键等于",
              "nullable": true
            }
          },
          {
            "name": "KeyContains",
            "in": "query",
            "description": "主键包含",
            "schema": {
              "type": "string",
              "description": "主键包含",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatRoleIPaginatedListResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "新建角色",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RatRole"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatRole"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RatRole"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RatRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Role/{key}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "按角色code 查询角色",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatRole"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "修改角色",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RatRole"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatRole"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RatRole"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RatRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "删除角色",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/Role/SelectOptions": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "角色的下拉框简单选项",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/api/VatCodes/Data": {
      "get": {
        "tags": [
          "VatCodes"
        ],
        "summary": "获取数据",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatCodesModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/test/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "试验, 请忽略",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/test/WeatherForecast/Foo": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "试验, 请忽略",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/test/WeatherForecast/Dates": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "试验, 请忽略",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/test/WeatherForecast/GetUser": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "试验, 请忽略",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/test/WeatherForecast/Assemblies": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "试验, 请忽略",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "试验, 请忽略",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/test/WeatherForecast/GetJwtOptions": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "试验, 请忽略",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    },
    "/test/WeatherForecast/ThrowException": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "summary": "试验, 请忽略",
        "parameters": [
          {
            "name": "ctz",
            "in": "header",
            "description": "client time zone IANA name. javascript code to get client time zone: `Intl.DateTimeFormat().resolvedOptions().timeZone`. Example: \"Asia/Shanghai\"",
            "schema": {
              "type": "string",
              "example": "Asia/Shanghai"
            }
          },
          {
            "name": "locale",
            "in": "header",
            "description": "locale culture. Example: \"en\", \"zh\"",
            "schema": {
              "type": "string",
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "newtoken": {
                "description": "new token",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "locale": {
                "description": "locale culture. Example: \"en\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              },
              "stz": {
                "description": "server time zone IANA name. Example: \"Asia/Shanghai\"",
                "allowEmptyValue": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "LoginModel": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginResult": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IContextUserWithPrivileges": {
        "type": "object",
        "properties": {
          "privileges": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordModel": {
        "type": "object",
        "properties": {
          "passwordOld": {
            "type": "string",
            "nullable": true
          },
          "passwordNew": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InitializeAdminPasswordModel": {
        "type": "object",
        "properties": {
          "passwordNew": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetOthersPasswordModel": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "passwordNew": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IPaginationResult": {
        "type": "object",
        "properties": {
          "pageCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "currentPage": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Markets": {
        "type": "object",
        "properties": {
          "market": {
            "type": "string",
            "description": "Relational:ColumnName: [MARKETS].[Market]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 业务组合名 (主键)",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "Relational:ColumnName: [MARKETS].[Comments]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 备注",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "description": "Relational:ColumnName: [MARKETS].[entity]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(10)\r\n\r\n含义: 实体 (ref entities)",
            "nullable": true
          },
          "metal": {
            "type": "string",
            "description": "Relational:ColumnName: [MARKETS].[Metal]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 品类 (ref metals)",
            "nullable": true
          },
          "entityCode": {
            "type": "string",
            "description": "Relational:ColumnName: [MARKETS].[entity_code]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(5)\r\n\r\n含义: rat中: 这是entity的short_code_for_book的冗余",
            "nullable": true
          },
          "active": {
            "type": "string",
            "description": "Relational:ColumnName: [MARKETS].[active]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(1)\r\n\r\n含义: 启用状态 (enum BooleanEnumYn)",
            "nullable": true
          },
          "strategyType": {
            "type": "string",
            "description": "Relational:ColumnName: [MARKETS].[strategy_type]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(10)\r\n\r\n含义: rat新增: 策略类型 (enum StrategyType)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [MARKETS]\r\n<para></para>\r\n含义: MARKETS--业务组合(book/market/portfolio) 类似策略加核算主体"
      },
      "MarketsIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Markets"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ChargeModel": {
        "type": "object",
        "properties": {
          "chargeId": {
            "type": "string",
            "description": "Id",
            "nullable": true
          },
          "counterpart": {
            "type": "string",
            "description": "客户名称",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "Lot号",
            "format": "int32"
          },
          "invoiceDate": {
            "type": "string",
            "description": "发票日期",
            "format": "date-time",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "发票号",
            "nullable": true
          },
          "chargeType": {
            "type": "string",
            "description": "Charge 类型",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "品牌",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "备注",
            "nullable": true
          },
          "exchangeRate": {
            "type": "number",
            "description": "汇率",
            "format": "double",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "总金额(Total amount)",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "总金额币种(Total amount currency)",
            "nullable": true
          },
          "vat": {
            "type": "number",
            "description": "VAT金额",
            "format": "double",
            "nullable": true
          },
          "vatCurrency": {
            "type": "string",
            "description": "Vat币种",
            "nullable": true
          },
          "expPayDate": {
            "type": "string",
            "description": "预计付款日期",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "截至日期",
            "format": "date-time",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "交付日期",
            "format": "date-time",
            "nullable": true
          },
          "accounted": {
            "type": "string",
            "description": "是否已作帐",
            "nullable": true
          },
          "payed": {
            "type": "string",
            "description": "是否付款(Payment complete)",
            "nullable": true
          },
          "payedAmount": {
            "type": "number",
            "description": "已付款金额",
            "format": "double",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "最近付款日期",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "description": "最近更新日期",
            "format": "date-time",
            "nullable": true
          },
          "arcVat": {
            "type": "string",
            "description": "VAT number(ARC's VAT number)",
            "nullable": true
          },
          "vatCode": {
            "type": "string",
            "description": "VAT_CODE",
            "nullable": true
          },
          "vatDescription": {
            "type": "string",
            "description": "VAT_CODE mentions",
            "nullable": true
          },
          "libor": {
            "type": "number",
            "description": "Libor比率",
            "format": "double",
            "nullable": true
          },
          "liborDescription": {
            "type": "string",
            "description": "Libor description",
            "nullable": true
          },
          "marginRate": {
            "type": "number",
            "description": "Margin比率",
            "format": "double",
            "nullable": true
          },
          "allInRate": {
            "type": "number",
            "description": "or all in rate",
            "format": "double",
            "nullable": true
          },
          "marginNbOfDays": {
            "type": "integer",
            "description": "Libor days",
            "format": "int32",
            "nullable": true
          },
          "penaltyRate": {
            "type": "number",
            "description": "Penalty比率",
            "format": "double",
            "nullable": true
          },
          "penaltyNbOfDays": {
            "type": "integer",
            "description": "Penalty days",
            "format": "int32",
            "nullable": true
          },
          "deliveryTerms": {
            "type": "string",
            "description": "Delivery terms",
            "nullable": true
          },
          "payTerms": {
            "type": "string",
            "description": "付款方式",
            "nullable": true
          },
          "payTermsMention": {
            "type": "string",
            "description": "付款方式说明",
            "nullable": true
          },
          "paymentTermsCode": {
            "type": "string",
            "description": "ARC's receiving account",
            "nullable": true
          },
          "paymentTerms": {
            "type": "string",
            "description": "ARC's receiving account descriptions",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ChargeModel"
      },
      "ChargeModelIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargeModel"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Cities": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "Relational:ColumnName: [CITIES].[CITY]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 城市名 (主键)",
            "nullable": true
          },
          "geographical": {
            "type": "string",
            "description": "Relational:ColumnName: [CITIES].[Geographical]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 地理名称",
            "nullable": true
          },
          "loading": {
            "type": "number",
            "description": "Relational:ColumnName: [CITIES].[Loading]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Loading",
            "format": "double",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Relational:ColumnName: [CITIES].[Country]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 国家地区 (ref contries)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [CITIES]\r\n<para></para>\r\n含义: CITIES--城市"
      },
      "CitiesIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cities"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Commodities": {
        "type": "object",
        "properties": {
          "commodity": {
            "type": "string",
            "description": "Relational:ColumnName: [COMMODITIES].[commodity]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 物料名 (主键)",
            "nullable": true
          },
          "premium": {
            "type": "number",
            "description": "Relational:ColumnName: [COMMODITIES].[premium]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 升贴水",
            "format": "double",
            "nullable": true
          },
          "market": {
            "type": "string",
            "description": "Relational:ColumnName: [COMMODITIES].[market]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: (废弃)",
            "nullable": true
          },
          "metal": {
            "type": "string",
            "description": "Relational:ColumnName: [COMMODITIES].[metal]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 品类 (ref metals)",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Relational:ColumnName: [COMMODITIES].[description]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 描述",
            "nullable": true
          },
          "premium2": {
            "type": "number",
            "description": "Relational:ColumnName: [COMMODITIES].[premium2]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 第二升贴水",
            "format": "double",
            "nullable": true
          },
          "pricing": {
            "type": "string",
            "description": "Relational:ColumnName: [COMMODITIES].[pricing]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(1)\r\n\r\n含义: pricing (rabbit有用到, 需调研)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [COMMODITIES]\r\n<para></para>\r\n含义: COMMODITIES--物料"
      },
      "CommoditiesIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Commodities"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Comptes": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "description": "Relational:ColumnName: [Comptes].[Login]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 用户名 (主键)",
            "nullable": true
          },
          "nom": {
            "type": "string",
            "description": "Relational:ColumnName: [Comptes].[Nom]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 名称 (候选键)",
            "nullable": true
          },
          "mdp": {
            "type": "string",
            "description": "Relational:ColumnName: [Comptes].[mdp]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: mdp(废弃)",
            "nullable": true
          },
          "environement": {
            "type": "string",
            "description": "Relational:ColumnName: [Comptes].[environement]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 角色",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [Comptes]\r\n<para></para>\r\n含义: Comptes--用户账户"
      },
      "ComptesIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comptes"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ComptesCreateModel": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "nullable": true
          },
          "nom": {
            "type": "string",
            "nullable": true
          },
          "environement": {
            "type": "string",
            "description": "角色",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComptesUpdateModel": {
        "type": "object",
        "properties": {
          "environement": {
            "type": "string",
            "description": "角色",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Traders": {
        "type": "object",
        "properties": {
          "traderName": {
            "type": "string",
            "description": "Relational:ColumnName: [TRADERS].[trader_name]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 业务员名称 (主键) (ref Comptes.Nom)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [TRADERS]\r\n<para></para>\r\n含义: TRADERS--业务员"
      },
      "NewContracts": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "Relational:ColumnName: [NEW_CONTRACTS].[CONTRACT]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: CONTRACT",
            "nullable": true
          },
          "counterpart": {
            "type": "string",
            "description": "Relational:ColumnName: [NEW_CONTRACTS].[Counterpart]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: Counterpart",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Relational:ColumnName: [NEW_CONTRACTS].[Quantity]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Quantity",
            "format": "double",
            "nullable": true
          },
          "qp": {
            "type": "string",
            "description": "Relational:ColumnName: [NEW_CONTRACTS].[qp]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: qp",
            "nullable": true
          },
          "serialNb": {
            "type": "integer",
            "description": "Relational:ColumnName: [NEW_CONTRACTS].[serial_nb]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: int\r\n\r\n含义: serial_nb",
            "format": "int32",
            "nullable": true
          },
          "contractDate": {
            "type": "string",
            "description": "Relational:ColumnName: [NEW_CONTRACTS].[Contract_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Contract_date",
            "format": "date-time",
            "nullable": true
          },
          "pic": {
            "type": "string",
            "description": "Relational:ColumnName: [NEW_CONTRACTS].[PIC]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: PIC",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [NEW_CONTRACTS]\r\n<para></para>\r\n含义: NEW_CONTRACTS"
      },
      "NewContractsIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewContracts"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NewContractsModel": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "合同编号",
            "nullable": true
          },
          "counterpart": {
            "type": "string",
            "description": "客户名称",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "重量",
            "format": "double",
            "nullable": true
          },
          "qp": {
            "type": "string",
            "description": "现货月",
            "nullable": true
          },
          "serialNb": {
            "type": "integer",
            "description": "合同号数字",
            "format": "int32",
            "nullable": true
          },
          "pic": {
            "type": "string",
            "description": "执行人员",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "合同编号"
      },
      "Counterparts": {
        "type": "object",
        "properties": {
          "counterpart": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[Counterpart]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 公司名",
            "nullable": true
          },
          "legalName": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[Legal_name]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(100)\r\n\r\n含义: 法定名称",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[Address]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(Max)\r\n\r\n含义: 地址",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[Country]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 国家地区 (ref countries)",
            "nullable": true
          },
          "type1": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[Type1]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(10)\r\n\r\n含义: 公司类型 (enum CounterpartType)",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[Entity]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(10)\r\n\r\n含义: arc的实体 (ref entities)",
            "nullable": true
          },
          "bankDetails": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[Bank_details]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(Max)\r\n\r\n含义: Bank_details",
            "nullable": true
          },
          "accountCode": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[Account_code]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: Account_code",
            "nullable": true
          },
          "sageNb": {
            "type": "integer",
            "description": "Relational:ColumnName: [COUNTERPARTS].[SAGE_nb]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: int\r\n\r\n含义: SAGE_nb",
            "format": "int32"
          },
          "cur": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[cur]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(5)\r\n\r\n含义: 币种 (ref currencies)",
            "nullable": true
          },
          "brokerCode": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[broker_code]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: broker_code",
            "nullable": true
          },
          "companyGroup": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[Company_group]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 公司组",
            "nullable": true
          },
          "creditLine": {
            "type": "number",
            "description": "Relational:ColumnName: [COUNTERPARTS].[credit_line]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 信用额度",
            "format": "double",
            "nullable": true
          },
          "creditLineCurrency": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[credit_line_currency]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(5)\r\n\r\n含义: 信用额度币种 (ref currencies)",
            "nullable": true
          },
          "creditLineExpiry": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[credit_line_expiry]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: 信用额度到期日期",
            "format": "date-time",
            "nullable": true
          },
          "intermediary": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[intermediary]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(1)\r\n\r\n含义: intermediary",
            "nullable": true
          },
          "bankTier": {
            "type": "integer",
            "description": "Relational:ColumnName: [COUNTERPARTS].[bank_tier]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: int\r\n\r\n含义: bank_tier",
            "format": "int32",
            "nullable": true
          },
          "checked": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[checked]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(1)\r\n\r\n含义: 已验证 (enum BooleanEnumYn)",
            "nullable": true
          },
          "issuingBank": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[issuing_bank]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(1)\r\n\r\n含义: 信用证issuing_bank (enum BooleanEnumYn)",
            "nullable": true
          },
          "advisingBank": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[advising_bank]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(1)\r\n\r\n含义: 信用证advising_bank (enum BooleanEnumYn)",
            "nullable": true
          },
          "recourse": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[recourse]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(20)\r\n\r\n含义: 信用证追索权 (enum LcRecourse)",
            "nullable": true
          },
          "kycDate": {
            "type": "string",
            "description": "Relational:ColumnName: [COUNTERPARTS].[KYC_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: 了解你的客户日期",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [COUNTERPARTS]\r\n<para></para>\r\n含义: COUNTERPARTS--公司"
      },
      "CounterpartsIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Counterparts"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Currencies": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Relational:ColumnName: [CURRENCIES].[currency]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(3)\r\n\r\n含义: currency",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Relational:ColumnName: [CURRENCIES].[description]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: description",
            "nullable": true
          },
          "accountCode": {
            "type": "string",
            "description": "Relational:ColumnName: [CURRENCIES].[account_code]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(1)\r\n\r\n含义: account_code",
            "nullable": true
          },
          "currentRate": {
            "type": "number",
            "description": "Relational:ColumnName: [CURRENCIES].[current_rate]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: current_rate",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [CURRENCIES]\r\n<para></para>\r\n含义: CURRENCIES--币种"
      },
      "CurrenciesIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currencies"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Entities": {
        "type": "object",
        "properties": {
          "entity": {
            "type": "string",
            "description": "Relational:ColumnName: [ENTITIES].[ENTITY]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(10)\r\n\r\n含义: 实体名 (主键)",
            "nullable": true
          },
          "sageNumber": {
            "type": "string",
            "description": "Relational:ColumnName: [ENTITIES].[SAGE_NUMBER]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(1)\r\n\r\n含义: SAGE_NUMBER",
            "nullable": true
          },
          "shortCodeForBook": {
            "type": "string",
            "description": "Relational:ColumnName: [ENTITIES].[short_code_for_book]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(10)\r\n\r\n含义: rat新增: book中的简称",
            "nullable": true
          },
          "shortCodeForContract": {
            "type": "string",
            "description": "Relational:ColumnName: [ENTITIES].[short_code_for_contract]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(1)\r\n\r\n含义: rat新增: 合同中的简称",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [ENTITIES]\r\n<para></para>\r\n含义: ENTITIES--arc的实体"
      },
      "EntitiesIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Entities"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "Fxcodes": {
        "type": "object",
        "properties": {
          "fxCode": {
            "type": "string",
            "description": "Relational:ColumnName: [FXCODES].[fx_code]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(10)\r\n\r\n含义: 代码 (主键)",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Relational:ColumnName: [FXCODES].[comment]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 备注",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [FXCODES]\r\n<para></para>\r\n含义: FXCODES--外汇汇率来源"
      },
      "FxcodesIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fxcodes"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InvoicesAllocationDataModel": {
        "type": "object",
        "properties": {
          "allocationNumber": {
            "type": "string",
            "description": "Allocation",
            "nullable": true
          },
          "step": {
            "type": "integer",
            "description": "Ref",
            "format": "int32"
          },
          "netWeight": {
            "type": "number",
            "description": "净重",
            "format": "double",
            "nullable": true
          },
          "docNumber": {
            "type": "string",
            "description": "文档编号",
            "nullable": true
          },
          "clean": {
            "type": "string",
            "description": "Clean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "InvoicesAllocationDataModel"
      },
      "InvoiceListModel": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "unpaid": {
            "type": "number",
            "description": "未付金额",
            "format": "double",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "Lot号",
            "format": "int32"
          },
          "counterpart": {
            "type": "string",
            "description": "客户名称",
            "nullable": true
          },
          "companyGroup": {
            "type": "string",
            "description": "Group名称",
            "nullable": true
          },
          "supervisor": {
            "type": "string",
            "description": "跟进人(Pic)",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "状态",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "发票号",
            "nullable": true
          },
          "adjusted": {
            "type": "string",
            "description": "临时发票号",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "量",
            "format": "double",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "品牌",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "币种",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "description": "价格",
            "format": "double",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "金额",
            "format": "double",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "发票日期",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "截止日期",
            "format": "date-time",
            "nullable": true
          },
          "payed": {
            "type": "string",
            "description": "是否付款",
            "nullable": true
          },
          "accounted": {
            "type": "string",
            "description": "是否已作帐",
            "nullable": true
          },
          "market": {
            "type": "string",
            "description": "业务组合",
            "nullable": true
          },
          "contractType": {
            "type": "string",
            "description": "合同类型",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "地区",
            "nullable": true
          },
          "commodity": {
            "type": "string",
            "description": "品种",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "最近付款时间",
            "format": "date-time",
            "nullable": true
          },
          "exchangeRate": {
            "type": "number",
            "description": "汇率",
            "format": "double",
            "nullable": true
          },
          "contractCurrency": {
            "type": "string",
            "description": "合同币种",
            "nullable": true
          },
          "payTerms": {
            "type": "string",
            "description": "付款方式",
            "nullable": true
          },
          "approveStatus": {
            "type": "string",
            "description": "审批状态",
            "nullable": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "最近修改时间",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "发票列表"
      },
      "InvoiceListModelIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceListModel"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InvoicesAllocs": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string",
            "description": "Relational:ColumnName: [INVOICES_ALLOCS].[INVOICE_NUMBER]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 销售发票号",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "description": "Relational:ColumnName: [INVOICES_ALLOCS].[CONTRACT]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 采购合同号",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "Relational:ColumnName: [INVOICES_ALLOCS].[LOT]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: int\r\n\r\n含义: 采购合同批次号",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "description": "Relational:ColumnName: [INVOICES_ALLOCS].[quantity]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: 关联的数量",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [INVOICES_ALLOCS]\r\n<para></para>\r\n含义: INVOICES_ALLOCS--销售发票与货物源头的采购批次合同的关联"
      },
      "InvoicesAllocationModel": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string",
            "description": "发票号",
            "nullable": true
          },
          "allocationNumber": {
            "type": "string",
            "description": "Allocation",
            "nullable": true
          },
          "step": {
            "type": "integer",
            "description": "Ref",
            "format": "int32"
          },
          "netWeight": {
            "type": "number",
            "description": "净重",
            "format": "double",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "delivery_date",
            "format": "date-time",
            "nullable": true
          },
          "docNumber": {
            "type": "string",
            "description": "文档编号",
            "nullable": true
          },
          "clean": {
            "type": "string",
            "description": "Clean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Allocations"
      },
      "InvoiceAddOrEditModel": {
        "type": "object",
        "properties": {
          "counterpart": {
            "type": "string",
            "description": "客户名称",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "量",
            "format": "double",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "Lot号",
            "format": "int32"
          },
          "purchaseContracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicesAllocs"
            },
            "description": "采购合同",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "发票日期",
            "format": "date-time",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "发票号",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "状态",
            "nullable": true
          },
          "adjusted": {
            "type": "string",
            "description": "临时发票号",
            "nullable": true
          },
          "purchaseInvoiceNumber": {
            "type": "string",
            "description": "内部交易的采购发票号",
            "nullable": true
          },
          "lcNumber": {
            "type": "string",
            "description": "信用证编号",
            "nullable": true
          },
          "ipNumber": {
            "type": "string",
            "description": "保单编号",
            "nullable": true
          },
          "commodity": {
            "type": "string",
            "description": "品种",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "品牌",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "description": "原产地",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "description": "毛重",
            "format": "double",
            "nullable": true
          },
          "bundlesNb": {
            "type": "number",
            "description": "捆数",
            "format": "double",
            "nullable": true
          },
          "packing": {
            "type": "string",
            "description": "包裹数",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "备注",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "description": "价格",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "币种",
            "nullable": true
          },
          "interests": {
            "type": "number",
            "description": "利息费",
            "format": "double",
            "nullable": true
          },
          "charge": {
            "type": "number",
            "description": "其他费用",
            "format": "double",
            "nullable": true
          },
          "vat": {
            "type": "number",
            "description": "税费",
            "format": "double",
            "nullable": true
          },
          "vatCurrency": {
            "type": "string",
            "description": "Vat币种",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "金额",
            "format": "double",
            "nullable": true
          },
          "exchageRate": {
            "type": "number",
            "description": "汇率",
            "format": "double",
            "nullable": true
          },
          "arcVat": {
            "type": "string",
            "description": "VAT number",
            "nullable": true
          },
          "counterpartVat": {
            "type": "string",
            "description": "Customer's VAT number",
            "nullable": true
          },
          "vatCode": {
            "type": "string",
            "description": "VAT_CODE",
            "nullable": true
          },
          "vatDescription": {
            "type": "string",
            "description": "VAT_CODE mentions",
            "nullable": true
          },
          "libor": {
            "type": "number",
            "description": "Libor比率",
            "format": "double",
            "nullable": true
          },
          "liborDescription": {
            "type": "string",
            "description": "Libor description",
            "nullable": true
          },
          "marginRate": {
            "type": "number",
            "description": "Margin比率",
            "format": "double",
            "nullable": true
          },
          "allInRate": {
            "type": "number",
            "description": "or all in rate",
            "format": "double",
            "nullable": true
          },
          "marginNbOfDays": {
            "type": "integer",
            "description": "Libor days",
            "format": "int32",
            "nullable": true
          },
          "penaltyRate": {
            "type": "number",
            "description": "Penalty比率",
            "format": "double",
            "nullable": true
          },
          "penaltyNbOfDays": {
            "type": "integer",
            "description": "Penalty days",
            "format": "int32",
            "nullable": true
          },
          "expPayDate": {
            "type": "string",
            "description": "预计付款日期",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "截至日期",
            "format": "date-time",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "交付日期",
            "format": "date-time",
            "nullable": true
          },
          "accounted": {
            "type": "string",
            "description": "是否已作帐",
            "nullable": true
          },
          "payed": {
            "type": "string",
            "description": "是否付款",
            "nullable": true
          },
          "payedAmount": {
            "type": "number",
            "description": "已付款金额",
            "format": "double",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "最近付款日期",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "description": "最近更新日期",
            "format": "date-time",
            "nullable": true
          },
          "allocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicesAllocationModel"
            },
            "description": "Allocations",
            "nullable": true
          },
          "deliveryTerms": {
            "type": "string",
            "description": "Delivery terms",
            "nullable": true
          },
          "docType": {
            "type": "string",
            "description": "文档类型",
            "nullable": true
          },
          "docNumber": {
            "type": "string",
            "description": "发票下的附件文档编号",
            "nullable": true
          },
          "docDate": {
            "type": "string",
            "description": "文档日期",
            "format": "date-time",
            "nullable": true
          },
          "insuranceCert": {
            "type": "string",
            "description": "Insurance certificate",
            "nullable": true
          },
          "payTerms": {
            "type": "string",
            "description": "付款方式",
            "nullable": true
          },
          "payTermsMention": {
            "type": "string",
            "description": "付款方式说明",
            "nullable": true
          },
          "paymentTermsCode": {
            "type": "string",
            "description": "ARC's receiving account",
            "nullable": true
          },
          "paymentTerms": {
            "type": "string",
            "description": "ARC's receiving account descriptions",
            "nullable": true
          },
          "chargeType": {
            "type": "string",
            "description": "chargeType",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "发票添加"
      },
      "InvoiceViewModel": {
        "type": "object",
        "properties": {
          "counterpart": {
            "type": "string",
            "description": "客户名称",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "量",
            "format": "double",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "Lot号",
            "format": "int32"
          },
          "purchaseContracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicesAllocs"
            },
            "description": "采购合同",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "发票日期",
            "format": "date-time",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "发票号",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "状态",
            "nullable": true
          },
          "adjusted": {
            "type": "string",
            "description": "临时发票号",
            "nullable": true
          },
          "purchaseInvoiceNumber": {
            "type": "string",
            "description": "内部交易的采购发票号",
            "nullable": true
          },
          "lcNumber": {
            "type": "string",
            "description": "信用证编号",
            "nullable": true
          },
          "ipNumber": {
            "type": "string",
            "description": "保单编号",
            "nullable": true
          },
          "commodity": {
            "type": "string",
            "description": "品种",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "品牌",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "description": "原产地",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "description": "毛重",
            "format": "double",
            "nullable": true
          },
          "bundlesNb": {
            "type": "number",
            "description": "捆数",
            "format": "double",
            "nullable": true
          },
          "packing": {
            "type": "string",
            "description": "包裹数",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "备注",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "description": "价格",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "币种",
            "nullable": true
          },
          "interests": {
            "type": "number",
            "description": "利息费",
            "format": "double",
            "nullable": true
          },
          "charge": {
            "type": "number",
            "description": "其他费用",
            "format": "double",
            "nullable": true
          },
          "vat": {
            "type": "number",
            "description": "税费",
            "format": "double",
            "nullable": true
          },
          "vatCurrency": {
            "type": "string",
            "description": "Vat币种",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "金额",
            "format": "double",
            "nullable": true
          },
          "exchageRate": {
            "type": "number",
            "description": "汇率",
            "format": "double",
            "nullable": true
          },
          "arcVat": {
            "type": "string",
            "description": "VAT number",
            "nullable": true
          },
          "counterpartVat": {
            "type": "string",
            "description": "Customer's VAT number",
            "nullable": true
          },
          "vatCode": {
            "type": "string",
            "description": "VAT_CODE",
            "nullable": true
          },
          "vatDescription": {
            "type": "string",
            "description": "VAT_CODE mentions",
            "nullable": true
          },
          "libor": {
            "type": "number",
            "description": "Libor比率",
            "format": "double",
            "nullable": true
          },
          "liborDescription": {
            "type": "string",
            "description": "Libor description",
            "nullable": true
          },
          "marginRate": {
            "type": "number",
            "description": "Margin比率",
            "format": "double",
            "nullable": true
          },
          "allInRate": {
            "type": "number",
            "description": "or all in rate",
            "format": "double",
            "nullable": true
          },
          "marginNbOfDays": {
            "type": "integer",
            "description": "Libor days",
            "format": "int32",
            "nullable": true
          },
          "penaltyRate": {
            "type": "number",
            "description": "Penalty比率",
            "format": "double",
            "nullable": true
          },
          "penaltyNbOfDays": {
            "type": "integer",
            "description": "Penalty days",
            "format": "int32",
            "nullable": true
          },
          "expPayDate": {
            "type": "string",
            "description": "预计付款日期",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "截至日期",
            "format": "date-time",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "交付日期",
            "format": "date-time",
            "nullable": true
          },
          "accounted": {
            "type": "string",
            "description": "是否已作帐",
            "nullable": true
          },
          "payed": {
            "type": "string",
            "description": "是否付款",
            "nullable": true
          },
          "payedAmount": {
            "type": "number",
            "description": "已付款金额",
            "format": "double",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "最近付款日期",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "description": "最近更新日期",
            "format": "date-time",
            "nullable": true
          },
          "allocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicesAllocationModel"
            },
            "description": "Allocations",
            "nullable": true
          },
          "deliveryTerms": {
            "type": "string",
            "description": "Delivery terms",
            "nullable": true
          },
          "docType": {
            "type": "string",
            "description": "文档类型",
            "nullable": true
          },
          "docNumber": {
            "type": "string",
            "description": "发票下的附件文档编号",
            "nullable": true
          },
          "docDate": {
            "type": "string",
            "description": "文档日期",
            "format": "date-time",
            "nullable": true
          },
          "insuranceCert": {
            "type": "string",
            "description": "Insurance certificate",
            "nullable": true
          },
          "payTerms": {
            "type": "string",
            "description": "付款方式",
            "nullable": true
          },
          "payTermsMention": {
            "type": "string",
            "description": "付款方式说明",
            "nullable": true
          },
          "paymentTermsCode": {
            "type": "string",
            "description": "ARC's receiving account",
            "nullable": true
          },
          "paymentTerms": {
            "type": "string",
            "description": "ARC's receiving account descriptions",
            "nullable": true
          },
          "chargeType": {
            "type": "string",
            "description": "chargeType",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "发票查看model"
      },
      "InvoiceModel": {
        "type": "object",
        "properties": {
          "counterpart": {
            "type": "string",
            "description": "客户名称",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "量",
            "format": "double",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "Lot号",
            "format": "int32"
          },
          "invoiceDate": {
            "type": "string",
            "description": "发票日期",
            "format": "date-time",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "发票号",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "状态",
            "nullable": true
          },
          "adjusted": {
            "type": "string",
            "description": "临时发票号",
            "nullable": true
          },
          "purchaseInvoiceNumber": {
            "type": "string",
            "description": "内部交易的采购发票号",
            "nullable": true
          },
          "lcNumber": {
            "type": "string",
            "description": "信用证编号",
            "nullable": true
          },
          "ipNumber": {
            "type": "string",
            "description": "保单编号",
            "nullable": true
          },
          "commodity": {
            "type": "string",
            "description": "品种",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "品牌",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "description": "原产地",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "description": "毛重",
            "format": "double",
            "nullable": true
          },
          "bundlesNb": {
            "type": "number",
            "description": "捆数",
            "format": "double",
            "nullable": true
          },
          "packing": {
            "type": "string",
            "description": "包裹数",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "备注",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "description": "价格",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "币种",
            "nullable": true
          },
          "interests": {
            "type": "number",
            "description": "利息费",
            "format": "double",
            "nullable": true
          },
          "charge": {
            "type": "number",
            "description": "其他费用",
            "format": "double",
            "nullable": true
          },
          "vat": {
            "type": "number",
            "description": "税费",
            "format": "double",
            "nullable": true
          },
          "vatCurrency": {
            "type": "string",
            "description": "Vat币种",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "金额",
            "format": "double",
            "nullable": true
          },
          "exchageRate": {
            "type": "number",
            "description": "汇率",
            "format": "double",
            "nullable": true
          },
          "arcVat": {
            "type": "string",
            "description": "VAT number",
            "nullable": true
          },
          "counterpartVat": {
            "type": "string",
            "description": "Customer's VAT number",
            "nullable": true
          },
          "vatCode": {
            "type": "string",
            "description": "VAT_CODE",
            "nullable": true
          },
          "vatDescription": {
            "type": "string",
            "description": "VAT_CODE mentions",
            "nullable": true
          },
          "libor": {
            "type": "number",
            "description": "Libor比率",
            "format": "double",
            "nullable": true
          },
          "liborDescription": {
            "type": "string",
            "description": "Libor description",
            "nullable": true
          },
          "marginRate": {
            "type": "number",
            "description": "Margin比率",
            "format": "double",
            "nullable": true
          },
          "allInRate": {
            "type": "number",
            "description": "or all in rate",
            "format": "double",
            "nullable": true
          },
          "marginNbOfDays": {
            "type": "integer",
            "description": "Libor days",
            "format": "int32",
            "nullable": true
          },
          "penaltyRate": {
            "type": "number",
            "description": "Penalty比率",
            "format": "double",
            "nullable": true
          },
          "penaltyNbOfDays": {
            "type": "integer",
            "description": "Penalty days",
            "format": "int32",
            "nullable": true
          },
          "expPayDate": {
            "type": "string",
            "description": "预计付款日期",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "截至日期",
            "format": "date-time",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "交付日期",
            "format": "date-time",
            "nullable": true
          },
          "accounted": {
            "type": "string",
            "description": "是否已作帐",
            "nullable": true
          },
          "payed": {
            "type": "string",
            "description": "是否付款",
            "nullable": true
          },
          "payedAmount": {
            "type": "number",
            "description": "已付款金额",
            "format": "double",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "最近付款日期",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "description": "最近更新日期",
            "format": "date-time",
            "nullable": true
          },
          "deliveryTerms": {
            "type": "string",
            "description": "Delivery terms",
            "nullable": true
          },
          "docType": {
            "type": "string",
            "description": "文档类型",
            "nullable": true
          },
          "docNumber": {
            "type": "string",
            "description": "发票下的附件文档编号",
            "nullable": true
          },
          "docDate": {
            "type": "string",
            "description": "文档日期",
            "format": "date-time",
            "nullable": true
          },
          "insuranceCert": {
            "type": "string",
            "description": "Insurance certificate",
            "nullable": true
          },
          "payTerms": {
            "type": "string",
            "description": "付款方式",
            "nullable": true
          },
          "payTermsMention": {
            "type": "string",
            "description": "付款方式说明",
            "nullable": true
          },
          "paymentTermsCode": {
            "type": "string",
            "description": "ARC's receiving account",
            "nullable": true
          },
          "paymentTerms": {
            "type": "string",
            "description": "ARC's receiving account descriptions",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "发票"
      },
      "InvoicesDocs": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string",
            "description": "Relational:ColumnName: [INVOICES_DOCS].[INVOICE_NUMBER]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 发票号",
            "nullable": true
          },
          "docId": {
            "type": "integer",
            "description": "Relational:ColumnName: [INVOICES_DOCS].[DOC_ID]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: int\r\n\r\n含义: 发票单据号",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Relational:ColumnName: [INVOICES_DOCS].[TITLE]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(100)\r\n\r\n含义: 标题",
            "nullable": true
          },
          "mention": {
            "type": "string",
            "description": "Relational:ColumnName: [INVOICES_DOCS].[MENTION]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(Max)\r\n\r\n含义: 记载",
            "nullable": true
          },
          "title2": {
            "type": "string",
            "description": "Relational:ColumnName: [INVOICES_DOCS].[TITLE2]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(100)\r\n\r\n含义: 标题2",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [INVOICES_DOCS]\r\n<para></para>\r\n含义: INVOICES_DOCS--发票的单据信息"
      },
      "PaginationForQuery": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "description": "缺省为第一页",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "缺省为15。若设置为小于等于0的值，则不分页。",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "分页查询参数类型。"
      },
      "LcsQuery": {
        "type": "object",
        "properties": {
          "lcTypeEquals": {
            "type": "string",
            "description": "信用证类型等于",
            "nullable": true
          },
          "notifyingBankContains": {
            "type": "string",
            "description": "NotifyingBank包含",
            "nullable": true
          },
          "lcNumberContains": {
            "type": "string",
            "description": "信用证编号包含",
            "nullable": true
          },
          "arcOperatiorEquals": {
            "type": "string",
            "description": "执行人员(PIC)",
            "nullable": true
          },
          "opeaningDateBegin": {
            "type": "string",
            "description": "开证日期开始",
            "format": "date-time",
            "nullable": true
          },
          "opeaningDateEnd": {
            "type": "string",
            "description": "开证日期结束",
            "format": "date-time",
            "nullable": true
          },
          "validityBegin": {
            "type": "string",
            "description": "过期时间开始(Expire date)",
            "format": "date-time",
            "nullable": true
          },
          "validityEnd": {
            "type": "string",
            "description": "过期时间结束(Expire date)",
            "format": "date-time",
            "nullable": true
          },
          "customerEquals": {
            "type": "string",
            "description": "客户",
            "nullable": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationForQuery"
          }
        },
        "additionalProperties": false,
        "description": "信用证查询条件"
      },
      "LcsInvoices": {
        "type": "object",
        "properties": {
          "lcId": {
            "type": "integer",
            "description": "Relational:ColumnName: [LCS_INVOICES].[LC_ID]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: int\r\n\r\n含义: LC_ID",
            "format": "int32"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS_INVOICES].[INVOICE_NUMBER]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: INVOICE_NUMBER",
            "nullable": true
          },
          "discountDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS_INVOICES].[Discount_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Discount_date",
            "format": "date-time",
            "nullable": true
          },
          "blNumber": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS_INVOICES].[BL_NUMBER]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: BL_NUMBER",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS_INVOICES].[CONTRACT]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: CONTRACT",
            "nullable": true
          },
          "lot": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS_INVOICES].[LOT]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: LOT",
            "format": "double",
            "nullable": true
          },
          "discountRate": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS_INVOICES].[Discount_rate]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: Discount_rate",
            "format": "double",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS_INVOICES].[due_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: due_date",
            "format": "date-time",
            "nullable": true
          },
          "docsSentDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS_INVOICES].[Docs_sent_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Docs_sent_date",
            "format": "date-time",
            "nullable": true
          },
          "notBkValidationDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS_INVOICES].[Not_bk_validation_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Not_bk_validation_date",
            "format": "date-time",
            "nullable": true
          },
          "discountRequestDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS_INVOICES].[Discount_request_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Discount_request_date",
            "format": "date-time",
            "nullable": true
          },
          "maturityDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS_INVOICES].[Maturity_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Maturity_date",
            "format": "date-time",
            "nullable": true
          },
          "libor": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS_INVOICES].[libor]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: libor",
            "format": "double",
            "nullable": true
          },
          "margin": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS_INVOICES].[margin]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: margin",
            "format": "double",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS_INVOICES].[notes]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(Max)\r\n\r\n含义: notes",
            "nullable": true
          },
          "chargedDays": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS_INVOICES].[charged_days]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: charged_days",
            "format": "double",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS_INVOICES].[Interest_rate]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: Interest_rate",
            "format": "double",
            "nullable": true
          },
          "negoFee": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS_INVOICES].[Nego_fee]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Nego_fee",
            "format": "double",
            "nullable": true
          },
          "otherCosts": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS_INVOICES].[Other_costs]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Other_costs",
            "format": "double",
            "nullable": true
          },
          "interestReturned": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS_INVOICES].[Interest_returned]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Interest_returned",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [LCS_INVOICES]\r\n<para></para>\r\n含义: LCS_INVOICES"
      },
      "LcsPayment": {
        "type": "object",
        "properties": {
          "valueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "nullable": true
          },
          "counterpart": {
            "type": "string",
            "nullable": true
          },
          "inOut": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "integer",
            "description": "Relational:ColumnName: [PAYMENTS_INVOICES].[Payment_ID]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: int\r\n\r\n含义: Payment_ID",
            "format": "int32"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Relational:ColumnName: [PAYMENTS_INVOICES].[INVOICE_NUMBER]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: INVOICE_NUMBER",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Relational:ColumnName: [PAYMENTS_INVOICES].[Amount]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Amount",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Lcs": {
        "type": "object",
        "properties": {
          "lcsInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LcsInvoices"
            },
            "description": "LcsInvoices",
            "nullable": true
          },
          "lcsPayment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LcsPayment"
            },
            "description": "Cash movements（仅作查看使用，添加/编辑请忽略）",
            "nullable": true
          },
          "lcId": {
            "type": "integer",
            "description": "Relational:ColumnName: [LCS].[LC_ID]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: int\r\n\r\n含义: LC_ID",
            "format": "int32"
          },
          "lcNumber": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[LC_NUMBER]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: LC_NUMBER",
            "nullable": true
          },
          "emittingBank": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Emitting_bank]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: Emitting_bank",
            "nullable": true
          },
          "notifyingBank": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Notifying_bank]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: Notifying_bank",
            "nullable": true
          },
          "customer": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Customer]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: Customer",
            "nullable": true
          },
          "initialQuantity": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Initial_quantity]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: Initial_quantity",
            "format": "double",
            "nullable": true
          },
          "adjustedQuantity": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Adjusted_quantity]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: Adjusted_quantity",
            "format": "double",
            "nullable": true
          },
          "initialPrice": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Initial_price]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Initial_price",
            "format": "double",
            "nullable": true
          },
          "adjustedPrice": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Adjusted_price]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Adjusted_price",
            "format": "double",
            "nullable": true
          },
          "tolerance": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Tolerance]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Tolerance",
            "format": "double",
            "nullable": true
          },
          "paymentTerms": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Payment_terms]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Payment_terms",
            "format": "double",
            "nullable": true
          },
          "openingDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Opening_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Opening_date",
            "format": "date-time",
            "nullable": true
          },
          "validity": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Validity]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Validity",
            "format": "date-time",
            "nullable": true
          },
          "blDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[BL_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: BL_date",
            "format": "date-time",
            "nullable": true
          },
          "nbConfirmationDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[NB_confirmation_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: NB_confirmation_date",
            "format": "date-time",
            "nullable": true
          },
          "nbValidationDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[NB_validation_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: NB_validation_date",
            "format": "date-time",
            "nullable": true
          },
          "docsSendingDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Docs_sending_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Docs_sending_date",
            "format": "date-time",
            "nullable": true
          },
          "maxShipmentDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Max_shipment_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Max_shipment_date",
            "format": "date-time",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Comments]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(Max)\r\n\r\n含义: Comments",
            "nullable": true
          },
          "ebValidationDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[EB_validation_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: EB_validation_date",
            "format": "date-time",
            "nullable": true
          },
          "silentConfRate": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Silent_conf_rate]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: Silent_conf_rate",
            "format": "double",
            "nullable": true
          },
          "silentConfAmount": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Silent_conf_amount]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Silent_conf_amount",
            "format": "double",
            "nullable": true
          },
          "discountAmount": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Discount_amount]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Discount_amount",
            "format": "double",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Interest_rate]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: Interest_rate",
            "format": "double",
            "nullable": true
          },
          "financingAmount": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Financing_amount]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Financing_amount",
            "format": "double",
            "nullable": true
          },
          "initialAmount": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Initial_amount]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Initial_amount",
            "format": "double",
            "nullable": true
          },
          "adjustedAmount": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Adjusted_amount]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Adjusted_amount",
            "format": "double",
            "nullable": true
          },
          "confRequestDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Conf_request_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Conf_request_date",
            "format": "date-time",
            "nullable": true
          },
          "arcOperator": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[ARC_operator]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: ARC_operator",
            "nullable": true
          },
          "interests": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Interests]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Interests",
            "format": "double",
            "nullable": true
          },
          "financingRate": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Financing_rate]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: Financing_rate",
            "format": "double",
            "nullable": true
          },
          "finalPriceWoInterests": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Final_price_wo_interests]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Final_price_wo_interests",
            "format": "double",
            "nullable": true
          },
          "totalCost": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Total_cost]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Total_cost",
            "format": "double",
            "nullable": true
          },
          "actualDiscountRate": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Actual_discount_rate]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: Actual_discount_rate",
            "format": "double",
            "nullable": true
          },
          "discountRequestDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[discount_request_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: discount_request_date",
            "format": "date-time",
            "nullable": true
          },
          "libor": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Libor]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: Libor",
            "format": "double",
            "nullable": true
          },
          "margin": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Margin]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Margin",
            "format": "double",
            "nullable": true
          },
          "finalPriceAllIn": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Final_price_all_in]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Final_price_all_in",
            "format": "double",
            "nullable": true
          },
          "arrivalDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Arrival_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Arrival_date",
            "format": "date-time",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Brand]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: Brand",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Origin]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: Origin",
            "nullable": true
          },
          "material": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Material]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(Max)\r\n\r\n含义: Material",
            "nullable": true
          },
          "packing": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Packing]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(Max)\r\n\r\n含义: Packing",
            "nullable": true
          },
          "finished": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Finished]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(1)\r\n\r\n含义: Finished",
            "nullable": true
          },
          "latestPresentationDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Latest_Presentation_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Latest_Presentation_date",
            "format": "date-time",
            "nullable": true
          },
          "discountDate": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Discount_date]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: Discount_date",
            "format": "date-time",
            "nullable": true
          },
          "discountRate": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Discount_rate]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: Discount_rate",
            "format": "double",
            "nullable": true
          },
          "draftMention": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Draft_mention]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(Max)\r\n\r\n含义: Draft_mention",
            "nullable": true
          },
          "lcType": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[LC_type]\r\n<br>\r\nIsRequired: False, ValueGenerated: ValueGenerated.OnAdd, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(2)\r\n\r\n含义: LC_type",
            "nullable": true
          },
          "toleranceType": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Tolerance_type]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(10)\r\n\r\n含义: Tolerance_type",
            "nullable": true
          },
          "toleranceQty": {
            "type": "number",
            "description": "Relational:ColumnName: [LCS].[Tolerance_qty]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: Tolerance_qty",
            "format": "double",
            "nullable": true
          },
          "toleranceQtyType": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[Tolerance_qty_type]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(10)\r\n\r\n含义: Tolerance_qty_type",
            "nullable": true
          },
          "received": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[received]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(1)\r\n\r\n含义: received",
            "nullable": true
          },
          "recourse": {
            "type": "string",
            "description": "Relational:ColumnName: [LCS].[recourse]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(20)\r\n\r\n含义: recourse",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [LCS]\r\n<para></para>\r\n含义: LCS--信用证"
      },
      "LcsIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lcs"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "QpExtensionLotModel": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "lot号",
            "format": "int32"
          },
          "fixationEnd": {
            "type": "string",
            "description": "Previous fixation end",
            "format": "date-time",
            "nullable": true
          },
          "promptDate": {
            "type": "string",
            "description": "Previous prompt",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "合同lot号"
      },
      "SelectAlloctionDataModel": {
        "type": "object",
        "properties": {
          "allocationNumber": {
            "type": "string",
            "description": "Allocation",
            "nullable": true
          },
          "step": {
            "type": "integer",
            "description": "Ref",
            "format": "int32"
          },
          "netWeight": {
            "type": "number",
            "description": "净重",
            "format": "double",
            "nullable": true
          },
          "docNumber": {
            "type": "string",
            "description": "文档编号",
            "nullable": true
          },
          "clean": {
            "type": "string",
            "description": "Clean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PurchaseInvoiceAlloctionData"
      },
      "Metals": {
        "type": "object",
        "properties": {
          "metal": {
            "type": "string",
            "description": "Relational:ColumnName: [METALS].[Metal]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 金属品类兼LME标准合约名 (主键)",
            "nullable": true
          },
          "marketPrice": {
            "type": "number",
            "description": "Relational:ColumnName: [METALS].[market_price]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 市场价",
            "format": "double",
            "nullable": true
          },
          "lotQty": {
            "type": "number",
            "description": "Relational:ColumnName: [METALS].[lot_qty]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: LME期货合约的单位交易量",
            "format": "double",
            "nullable": true
          },
          "shortCodeForBook": {
            "type": "string",
            "description": "Relational:ColumnName: [METALS].[short_code_for_book]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(10)\r\n\r\n含义: rat新增: book中的简称",
            "nullable": true
          },
          "shortCodeForContract": {
            "type": "string",
            "description": "Relational:ColumnName: [METALS].[short_code_for_contract]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(2)\r\n\r\n含义: rat新增: 合同中的简称",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [METALS]\r\n<para></para>\r\n含义: METALS--金属品类兼LME标准合约"
      },
      "MetalsIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metals"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Model_PaymentTerms": {
        "type": "object",
        "properties": {
          "paymentTermsCode": {
            "type": "string",
            "description": "Relational:ColumnName: [PAYMENT_TERMS].[Payment_terms_code]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: Payment_terms_code",
            "nullable": true
          },
          "paymentTerms": {
            "type": "string",
            "description": "Relational:ColumnName: [PAYMENT_TERMS].[Payment_terms]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(Max)\r\n\r\n含义: Payment_terms",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [PAYMENT_TERMS]\r\n<para></para>\r\n含义: PAYMENT_TERMS--发票条款的arc的银行账户"
      },
      "Model_PaymentTermsIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_PaymentTerms"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Model_PayTerms": {
        "type": "object",
        "properties": {
          "payTerms": {
            "type": "string",
            "description": "Relational:ColumnName: [PAY_TERMS].[pay_terms]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(20)\r\n\r\n含义: pay_terms",
            "nullable": true
          },
          "payTermsMention": {
            "type": "string",
            "description": "Relational:ColumnName: [PAY_TERMS].[pay_terms_mention]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(Max)\r\n\r\n含义: pay_terms_mention",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [PAY_TERMS]\r\n<para></para>\r\n含义: PAY_TERMS--发票条款的货款方式和支付形式"
      },
      "Model_PayTermsIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_PayTerms"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PhysicalContractModel": {
        "type": "object",
        "properties": {
          "contractDate": {
            "type": "string",
            "description": "合同日期",
            "format": "date-time",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "Lot号",
            "format": "int32",
            "nullable": true
          },
          "btb": {
            "type": "string",
            "description": "BTB合同号",
            "nullable": true
          },
          "supervisor": {
            "type": "string",
            "description": "执行人员(PIC)",
            "nullable": true
          },
          "ps": {
            "type": "string",
            "description": "采购/销售(P-采购，s-销售)",
            "nullable": true
          },
          "counterpart": {
            "type": "string",
            "description": "客户名称",
            "nullable": true
          },
          "companyGroup": {
            "type": "string",
            "description": "客户所属组名",
            "nullable": true
          },
          "commodity": {
            "type": "string",
            "description": "品种",
            "nullable": true
          },
          "premium": {
            "type": "number",
            "description": "升贴水",
            "format": "double",
            "nullable": true
          },
          "premium2": {
            "type": "number",
            "description": "第二升贴水",
            "format": "double",
            "nullable": true
          },
          "extFee": {
            "type": "number",
            "description": "延期费",
            "format": "double",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "description": "合同单价",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "币种",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "合同重量",
            "format": "double",
            "nullable": true
          },
          "quantpriced": {
            "type": "number",
            "description": "已点价量",
            "format": "double",
            "nullable": true
          },
          "priced": {
            "type": "string",
            "description": "点价是否完成(P-点价完成,U-点价未完成)",
            "nullable": true
          },
          "formula": {
            "type": "string",
            "description": "点价方式",
            "nullable": true
          },
          "fixationStart": {
            "type": "string",
            "description": "作价开始日期",
            "format": "date-time",
            "nullable": true
          },
          "fixationEnd": {
            "type": "string",
            "description": "作价结束日期",
            "format": "date-time",
            "nullable": true
          },
          "invoiced": {
            "type": "number",
            "description": "已开票量",
            "format": "double",
            "nullable": true
          },
          "purchased": {
            "type": "number",
            "description": "已采购量",
            "format": "double",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "交货日期",
            "format": "date-time",
            "nullable": true
          },
          "closingDate": {
            "type": "string",
            "description": "合同完成日期",
            "format": "date-time",
            "nullable": true
          },
          "market": {
            "type": "string",
            "description": "业务组合",
            "nullable": true
          },
          "ultimateCounterpart": {
            "type": "string",
            "description": "最终客户名称",
            "nullable": true
          },
          "promptDate": {
            "type": "string",
            "description": "交割日",
            "format": "date-time",
            "nullable": true
          },
          "charges": {
            "type": "number",
            "description": "费用",
            "format": "double",
            "nullable": true
          },
          "trader": {
            "type": "string",
            "description": "业务员",
            "nullable": true
          },
          "approveStatus": {
            "type": "string",
            "description": "审批状态",
            "nullable": true
          },
          "contractType": {
            "type": "string",
            "description": "合同类型",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "现货合同"
      },
      "PhysicalContractModelIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalContractModel"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LotsAddOrEditModel": {
        "type": "object",
        "properties": {
          "lot": {
            "type": "integer",
            "description": "Lot号",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "description": "合同单价",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "单价币种(Unit price currency)",
            "nullable": true
          },
          "premium": {
            "type": "number",
            "description": "升贴水",
            "format": "double",
            "nullable": true
          },
          "unknownPremium": {
            "type": "string",
            "description": "升贴水待定",
            "nullable": true
          },
          "premiumCurrency": {
            "type": "string",
            "description": "升贴水币种",
            "nullable": true
          },
          "premium2": {
            "type": "number",
            "description": "第二升贴水",
            "format": "double",
            "nullable": true
          },
          "premiumCurrency2": {
            "type": "string",
            "description": "第二升贴水币种",
            "nullable": true
          },
          "extFee": {
            "type": "number",
            "description": "延期费(Extension fee)",
            "format": "double",
            "nullable": true
          },
          "charges": {
            "type": "number",
            "description": "费用",
            "format": "double",
            "nullable": true
          },
          "formula": {
            "type": "string",
            "description": "点价方式(Price formula)",
            "nullable": true
          },
          "fxCode": {
            "type": "string",
            "description": "行情来源",
            "nullable": true
          },
          "quotationCode": {
            "type": "string",
            "description": "作价合约",
            "nullable": true
          },
          "fixationStart": {
            "type": "string",
            "description": "作价开始日期",
            "format": "date-time",
            "nullable": true
          },
          "fixationEnd": {
            "type": "string",
            "description": "作价结束日期",
            "format": "date-time",
            "nullable": true
          },
          "fixationDays": {
            "type": "number",
            "description": "作价天数",
            "format": "double",
            "nullable": true
          },
          "promptDate": {
            "type": "string",
            "description": "交割日",
            "format": "date-time",
            "nullable": true
          },
          "paymentType": {
            "type": "string",
            "description": "付款方式(Payment terms)",
            "nullable": true
          },
          "paymentBeforeAfter": {
            "type": "string",
            "description": "付款条件(Payment_before_after)",
            "nullable": true
          },
          "paymentNbOfDays": {
            "type": "integer",
            "description": "付款天数(Payment_nb_of_days)",
            "format": "int32",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "交货日期",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "预计付款日期(Expected payment date)",
            "format": "date-time",
            "nullable": true
          },
          "commodity": {
            "type": "string",
            "description": "品种",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "品牌",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "城市",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "合同重量",
            "format": "double",
            "nullable": true
          },
          "tolerance": {
            "type": "number",
            "description": "容忍度",
            "format": "double",
            "nullable": true
          },
          "invoiced": {
            "type": "number",
            "description": "已开票量(Qty invoiced)",
            "format": "double",
            "nullable": true
          },
          "purchased": {
            "type": "number",
            "description": "已采购量(Qty purchase)",
            "format": "double",
            "nullable": true
          },
          "quantpriced": {
            "type": "number",
            "description": "已点价量(Qty priced)",
            "format": "double",
            "nullable": true
          },
          "priced": {
            "type": "string",
            "description": "点价是否完成",
            "nullable": true
          },
          "closed": {
            "type": "string",
            "description": "合同完成日期(Closed on)",
            "format": "date-time",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "备注(Remarks)",
            "nullable": true
          },
          "lcMargin": {
            "type": "number",
            "description": "贴现率(Margin)",
            "format": "double",
            "nullable": true
          },
          "lcPenalty": {
            "type": "number",
            "description": "罚金率(Penalty)",
            "format": "double",
            "nullable": true
          },
          "allInRate": {
            "type": "number",
            "description": "固定贴现率",
            "format": "double",
            "nullable": true
          },
          "tenor": {
            "type": "integer",
            "description": "信用证期限天数",
            "format": "int32",
            "nullable": true
          },
          "lcDeadline": {
            "type": "string",
            "description": "最后开证日期(Deadline for opening)",
            "format": "date-time",
            "nullable": true
          },
          "openingBank": {
            "type": "string",
            "description": "开证行(Opening bank)",
            "nullable": true
          },
          "reinvoicingType": {
            "type": "string",
            "description": "Reinvoicing的类型(Type)",
            "nullable": true
          },
          "reinvoicingDone": {
            "type": "string",
            "description": "Reinvoicing是否完成(Done)",
            "nullable": true
          },
          "reinvoicingComment": {
            "type": "string",
            "description": "Reinvoicing的备注（Remarks）",
            "nullable": true
          },
          "freight": {
            "type": "number",
            "description": "重量",
            "format": "double",
            "nullable": true
          },
          "financing": {
            "type": "number",
            "description": "质押量",
            "format": "double",
            "nullable": true
          },
          "commission": {
            "type": "number",
            "description": "手续费",
            "format": "double",
            "nullable": true
          },
          "rent": {
            "type": "number",
            "description": "Rent",
            "format": "double",
            "nullable": true
          },
          "duties": {
            "type": "number",
            "description": "Duties",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "lot添加"
      },
      "ContractsCreateModel": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "含义: 合同号 (主键)",
            "nullable": true
          },
          "counterpart": {
            "type": "string",
            "description": "含义: 对方公司 (ref counterparts)",
            "nullable": true
          },
          "ps": {
            "type": "string",
            "description": "含义: 采购销售 (enum PurchaseSale)",
            "nullable": true
          },
          "contractDate": {
            "type": "string",
            "description": "含义: 合同日期",
            "format": "date-time",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "description": "含义: 原产地",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "含义: 品牌",
            "nullable": true
          },
          "destination": {
            "type": "string",
            "description": "含义: 目的地",
            "nullable": true
          },
          "deliveryTerms": {
            "type": "string",
            "description": "含义: 交货条款",
            "nullable": true
          },
          "market": {
            "type": "string",
            "description": "含义: 业务组合 (ref markets)",
            "nullable": true
          },
          "secondLeg": {
            "type": "string",
            "description": "含义: Internal transfer-second_leg",
            "nullable": true
          },
          "supervisor": {
            "type": "string",
            "description": "含义: PIC-supervisor (ref comptes)",
            "nullable": true
          },
          "btb": {
            "type": "string",
            "description": "含义: BTB 关联合同号 (ref contracts)",
            "nullable": true
          },
          "ultimateCounterpart": {
            "type": "string",
            "description": "含义: 最终对方公司 (ref counterparts)",
            "nullable": true
          },
          "trader": {
            "type": "string",
            "description": "含义: 业务员 (ref traders)",
            "nullable": true
          },
          "reinvoicing": {
            "type": "string",
            "description": "含义: 贴现备注",
            "nullable": true
          },
          "contractType": {
            "type": "string",
            "description": "含义: 贸易合同类型 (enum ContractType)",
            "nullable": true
          },
          "lots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LotsAddOrEditModel"
            },
            "description": "Lots",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "贸易长单零单合同(长单合同, 零单合同) 新建"
      },
      "LotsAllocations": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "Relational:ColumnName: [LOTS_ALLOCATIONS].[CONTRACT]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 合同号",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "Relational:ColumnName: [LOTS_ALLOCATIONS].[LOT]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: int\r\n\r\n含义: 合同批次号",
            "format": "int32"
          },
          "allocationNumber": {
            "type": "string",
            "description": "Relational:ColumnName: [LOTS_ALLOCATIONS].[ALLOCATION_NUMBER]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 收发货 分配号",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Relational:ColumnName: [LOTS_ALLOCATIONS].[quantity]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: 关联数量",
            "format": "double"
          },
          "step": {
            "type": "string",
            "description": "Relational:ColumnName: [LOTS_ALLOCATIONS].[step]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(5)\r\n\r\n含义: 收发货 分配明细号",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [LOTS_ALLOCATIONS]\r\n<para></para>\r\n含义: LOTS_ALLOCATIONS--批次合同与收发货分配号的关联"
      },
      "LotsViewModel": {
        "type": "object",
        "properties": {
          "allocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LotsAllocations"
            },
            "description": "Allocations",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "Lot号",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "description": "合同单价",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "单价币种(Unit price currency)",
            "nullable": true
          },
          "premium": {
            "type": "number",
            "description": "升贴水",
            "format": "double",
            "nullable": true
          },
          "unknownPremium": {
            "type": "string",
            "description": "升贴水待定",
            "nullable": true
          },
          "premiumCurrency": {
            "type": "string",
            "description": "升贴水币种",
            "nullable": true
          },
          "premium2": {
            "type": "number",
            "description": "第二升贴水",
            "format": "double",
            "nullable": true
          },
          "premiumCurrency2": {
            "type": "string",
            "description": "第二升贴水币种",
            "nullable": true
          },
          "extFee": {
            "type": "number",
            "description": "延期费(Extension fee)",
            "format": "double",
            "nullable": true
          },
          "charges": {
            "type": "number",
            "description": "费用",
            "format": "double",
            "nullable": true
          },
          "formula": {
            "type": "string",
            "description": "点价方式(Price formula)",
            "nullable": true
          },
          "fxCode": {
            "type": "string",
            "description": "行情来源",
            "nullable": true
          },
          "quotationCode": {
            "type": "string",
            "description": "作价合约",
            "nullable": true
          },
          "fixationStart": {
            "type": "string",
            "description": "作价开始日期",
            "format": "date-time",
            "nullable": true
          },
          "fixationEnd": {
            "type": "string",
            "description": "作价结束日期",
            "format": "date-time",
            "nullable": true
          },
          "fixationDays": {
            "type": "number",
            "description": "作价天数",
            "format": "double",
            "nullable": true
          },
          "promptDate": {
            "type": "string",
            "description": "交割日",
            "format": "date-time",
            "nullable": true
          },
          "paymentType": {
            "type": "string",
            "description": "付款方式(Payment terms)",
            "nullable": true
          },
          "paymentBeforeAfter": {
            "type": "string",
            "description": "付款条件(Payment_before_after)",
            "nullable": true
          },
          "paymentNbOfDays": {
            "type": "integer",
            "description": "付款天数(Payment_nb_of_days)",
            "format": "int32",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "交货日期",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "预计付款日期(Expected payment date)",
            "format": "date-time",
            "nullable": true
          },
          "commodity": {
            "type": "string",
            "description": "品种",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "品牌",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "城市",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "合同重量",
            "format": "double",
            "nullable": true
          },
          "tolerance": {
            "type": "number",
            "description": "容忍度",
            "format": "double",
            "nullable": true
          },
          "invoiced": {
            "type": "number",
            "description": "已开票量(Qty invoiced)",
            "format": "double",
            "nullable": true
          },
          "purchased": {
            "type": "number",
            "description": "已采购量(Qty purchase)",
            "format": "double",
            "nullable": true
          },
          "quantpriced": {
            "type": "number",
            "description": "已点价量(Qty priced)",
            "format": "double",
            "nullable": true
          },
          "priced": {
            "type": "string",
            "description": "点价是否完成",
            "nullable": true
          },
          "closed": {
            "type": "string",
            "description": "合同完成日期(Closed on)",
            "format": "date-time",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "备注(Remarks)",
            "nullable": true
          },
          "lcMargin": {
            "type": "number",
            "description": "贴现率(Margin)",
            "format": "double",
            "nullable": true
          },
          "lcPenalty": {
            "type": "number",
            "description": "罚金率(Penalty)",
            "format": "double",
            "nullable": true
          },
          "allInRate": {
            "type": "number",
            "description": "固定贴现率",
            "format": "double",
            "nullable": true
          },
          "tenor": {
            "type": "integer",
            "description": "信用证期限天数",
            "format": "int32",
            "nullable": true
          },
          "lcDeadline": {
            "type": "string",
            "description": "最后开证日期(Deadline for opening)",
            "format": "date-time",
            "nullable": true
          },
          "openingBank": {
            "type": "string",
            "description": "开证行(Opening bank)",
            "nullable": true
          },
          "reinvoicingType": {
            "type": "string",
            "description": "Reinvoicing的类型(Type)",
            "nullable": true
          },
          "reinvoicingDone": {
            "type": "string",
            "description": "Reinvoicing是否完成(Done)",
            "nullable": true
          },
          "reinvoicingComment": {
            "type": "string",
            "description": "Reinvoicing的备注（Remarks）",
            "nullable": true
          },
          "freight": {
            "type": "number",
            "description": "重量",
            "format": "double",
            "nullable": true
          },
          "financing": {
            "type": "number",
            "description": "质押量",
            "format": "double",
            "nullable": true
          },
          "commission": {
            "type": "number",
            "description": "手续费",
            "format": "double",
            "nullable": true
          },
          "rent": {
            "type": "number",
            "description": "Rent",
            "format": "double",
            "nullable": true
          },
          "duties": {
            "type": "number",
            "description": "Duties",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhysicalContractViewModel": {
        "type": "object",
        "properties": {
          "lotsModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LotsViewModel"
            },
            "description": "Lots",
            "nullable": true
          },
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "counterpart": {
            "type": "string",
            "description": "客户名称",
            "nullable": true
          },
          "ps": {
            "type": "string",
            "description": "采购/销售(P-采购，s-销售)",
            "nullable": true
          },
          "contractDate": {
            "type": "string",
            "description": "合同日期",
            "format": "date-time",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "description": "源产地",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "品牌",
            "nullable": true
          },
          "destination": {
            "type": "string",
            "description": "目的地",
            "nullable": true
          },
          "deliveryTerms": {
            "type": "string",
            "description": "交货方式",
            "nullable": true
          },
          "market": {
            "type": "string",
            "description": "业务组合",
            "nullable": true
          },
          "secondLeg": {
            "type": "string",
            "description": "内部转让合同号(Internal transfer second leg)",
            "nullable": true
          },
          "supervisor": {
            "type": "string",
            "description": "执行人员(PIC)",
            "nullable": true
          },
          "btb": {
            "type": "string",
            "description": "背靠背交易的合同号(Back to back with contract  nb)",
            "nullable": true
          },
          "ultimateCounterpart": {
            "type": "string",
            "description": "最终客户(Ultimate counterpart)",
            "nullable": true
          },
          "companyGroup": {
            "type": "string",
            "description": "客户所属组名(Group)",
            "nullable": true
          },
          "trader": {
            "type": "string",
            "description": "业务员",
            "nullable": true
          },
          "reinvoicing": {
            "type": "string",
            "description": "Reinvoicing remarks",
            "nullable": true
          },
          "contractType": {
            "type": "string",
            "description": "合同类型",
            "nullable": true
          },
          "lots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LotsAddOrEditModel"
            },
            "description": "Lots",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "合同查看"
      },
      "ContractsUpdateModel": {
        "type": "object",
        "properties": {
          "counterpart": {
            "type": "string",
            "description": "含义: 对方公司 (ref counterparts)",
            "nullable": true
          },
          "contractDate": {
            "type": "string",
            "description": "含义: 合同日期",
            "format": "date-time",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "description": "含义: 原产地",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "含义: 品牌",
            "nullable": true
          },
          "destination": {
            "type": "string",
            "description": "含义: 目的地",
            "nullable": true
          },
          "deliveryTerms": {
            "type": "string",
            "description": "含义: 交货条款",
            "nullable": true
          },
          "supervisor": {
            "type": "string",
            "description": "含义: PIC-supervisor (ref comptes)",
            "nullable": true
          },
          "btb": {
            "type": "string",
            "description": "含义: BTB 关联合同号 (ref contracts)",
            "nullable": true
          },
          "ultimateCounterpart": {
            "type": "string",
            "description": "含义: 最终对方公司 (ref counterparts)",
            "nullable": true
          },
          "trader": {
            "type": "string",
            "description": "含义: 业务员 (ref traders)",
            "nullable": true
          },
          "reinvoicing": {
            "type": "string",
            "description": "含义: 贴现备注",
            "nullable": true
          },
          "lots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LotsAddOrEditModel"
            },
            "description": "Lots",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "贸易长单零单合同(长单合同, 零单合同) 修改"
      },
      "PhysicalContractCompleteInput": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "Lot号",
            "format": "int32"
          },
          "isComplete": {
            "type": "boolean",
            "description": "是否完成"
          },
          "closed": {
            "type": "string",
            "description": "合同完成日期(若IsComplete为true，则必填)",
            "format": "date-time",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "备注",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "合同完成/未完成输入"
      },
      "GenerateContractInput": {
        "type": "object",
        "properties": {
          "ps": {
            "type": "string",
            "description": "采购/销售(P-采购，s-销售)",
            "nullable": true
          },
          "contractDate": {
            "type": "string",
            "description": "合同日期",
            "format": "date-time"
          },
          "marcket": {
            "type": "string",
            "description": "业务组合",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "生成合同号输入"
      },
      "LotsOptions": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "批次合同号",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deliveryTerms": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "批次合同下拉框选项"
      },
      "LotsOptionsIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LotsOptions"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Pricing": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "Relational:ColumnName: [PRICING].[CONTRACT]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 合同号",
            "nullable": true
          },
          "lot": {
            "type": "number",
            "description": "Relational:ColumnName: [PRICING].[LOT]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 合同批次号",
            "format": "double"
          },
          "pricingNumber": {
            "type": "number",
            "description": "Relational:ColumnName: [PRICING].[Pricing_number]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 作价记录编号",
            "format": "double"
          },
          "pricingDate": {
            "type": "string",
            "description": "Relational:ColumnName: [PRICING].[Pricing_date]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: 作价日期",
            "format": "date-time"
          },
          "quantity": {
            "type": "number",
            "description": "Relational:ColumnName: [PRICING].[Quantity]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: 作价数量",
            "format": "double",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "Relational:ColumnName: [PRICING].[Price]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 价格",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "Relational:ColumnName: [PRICING].[CURRENCY]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(5)\r\n\r\n含义: 币种",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Relational:ColumnName: [PRICING].[Comment]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(200)\r\n\r\n含义: 备注",
            "nullable": true
          },
          "basePrice": {
            "type": "number",
            "description": "Relational:ColumnName: [PRICING].[base_price]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 基价",
            "format": "double",
            "nullable": true
          },
          "adjustment": {
            "type": "number",
            "description": "Relational:ColumnName: [PRICING].[Adjustment]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 调期费",
            "format": "double",
            "nullable": true
          },
          "commission": {
            "type": "number",
            "description": "Relational:ColumnName: [PRICING].[Commission]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 手续费",
            "format": "double",
            "nullable": true
          },
          "extFee": {
            "type": "number",
            "description": "Relational:ColumnName: [PRICING].[ext_fee]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 延期费",
            "format": "double",
            "nullable": true
          },
          "market": {
            "type": "string",
            "description": "Relational:ColumnName: [PRICING].[market]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: [冗余]业务组合",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [PRICING]\r\n<para></para>\r\n含义: PRICING--作价记录"
      },
      "PricingIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pricing"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PurchInvoicesListModel": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "unpaid": {
            "type": "number",
            "description": "未付金额",
            "format": "double",
            "nullable": true
          },
          "lot": {
            "type": "number",
            "description": "Lot号",
            "format": "double"
          },
          "counterpart": {
            "type": "string",
            "description": "客户名称",
            "nullable": true
          },
          "group": {
            "type": "string",
            "description": "Group名称",
            "nullable": true
          },
          "pic": {
            "type": "string",
            "description": "跟进人",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "状态",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "发票号",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "量",
            "format": "double",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "品牌",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "币种",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "description": "价格",
            "format": "double",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "价格",
            "format": "double",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "发票日期",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "截至日期",
            "format": "date-time",
            "nullable": true
          },
          "payed": {
            "type": "string",
            "description": "是否付款",
            "nullable": true
          },
          "accounted": {
            "type": "string",
            "description": "是否已做账",
            "nullable": true
          },
          "market": {
            "type": "string",
            "description": "业务组合",
            "nullable": true
          },
          "ultimateCounterpart": {
            "type": "string",
            "description": "关联合同的客户",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "付款时间",
            "format": "date-time",
            "nullable": true
          },
          "exchangeRate": {
            "type": "number",
            "description": "汇率",
            "format": "double",
            "nullable": true
          },
          "contractCurrency": {
            "type": "string",
            "description": "合同币种",
            "nullable": true
          },
          "extInvoiceNumber": {
            "type": "string",
            "description": "供应商单据(Supplier's ref)",
            "nullable": true
          },
          "approvalStatus": {
            "type": "string",
            "description": "审批状态",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "description": "最近修改时间",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PurchInvoices列表model"
      },
      "PurchInvoicesListModelIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchInvoicesListModel"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PurchInvoicesAlloctionModel": {
        "type": "object",
        "properties": {
          "allocationNumber": {
            "type": "string",
            "description": "Allocation",
            "nullable": true
          },
          "step": {
            "type": "integer",
            "description": "Ref",
            "format": "int32"
          },
          "netWeight": {
            "type": "number",
            "description": "净重",
            "format": "double",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "delivery_date",
            "format": "date-time",
            "nullable": true
          },
          "docNumber": {
            "type": "string",
            "description": "文档编号",
            "nullable": true
          },
          "clean": {
            "type": "string",
            "description": "Clean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Allocations"
      },
      "PurchInvoicesAddOrEditModel": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "lot": {
            "type": "number",
            "description": "Lot号",
            "format": "double"
          },
          "counterpart": {
            "type": "string",
            "description": "客户名称",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "发票日期",
            "format": "date-time",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "发票号",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "状态",
            "nullable": true
          },
          "adjusted": {
            "type": "string",
            "description": "临时发票号(Provisionnal invoice)",
            "nullable": true
          },
          "payTerms": {
            "type": "string",
            "description": "付款方式(Payment terms)",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "品牌",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "description": "价格",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "币种",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "量",
            "format": "double",
            "nullable": true
          },
          "charge": {
            "type": "number",
            "description": "金额",
            "format": "double",
            "nullable": true
          },
          "vat": {
            "type": "number",
            "description": "税费",
            "format": "double",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "金额(Total amount)",
            "format": "double",
            "nullable": true
          },
          "exchangeRate": {
            "type": "number",
            "description": "汇率",
            "format": "double",
            "nullable": true
          },
          "expPayDate": {
            "type": "string",
            "description": "预计付款日期(Expected payment date)",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "截至日期",
            "format": "date-time",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "交付日期",
            "format": "date-time",
            "nullable": true
          },
          "accounted": {
            "type": "string",
            "description": "是否已作帐",
            "nullable": true
          },
          "payed": {
            "type": "string",
            "description": "是否付款(Payment complete)",
            "nullable": true
          },
          "payedAmount": {
            "type": "number",
            "description": "已付款金额",
            "format": "double",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "最近付款日期",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "description": "最近更新日期",
            "format": "date-time",
            "nullable": true
          },
          "alloctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchInvoicesAlloctionModel"
            },
            "description": "Alloctions",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PurchInvoices添加/修改"
      },
      "PurchInvoicesViewModel": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "合同号",
            "nullable": true
          },
          "lot": {
            "type": "number",
            "description": "Lot号",
            "format": "double"
          },
          "counterpart": {
            "type": "string",
            "description": "客户名称",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "发票日期",
            "format": "date-time",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "发票号",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "状态",
            "nullable": true
          },
          "adjusted": {
            "type": "string",
            "description": "临时发票号(Provisionnal invoice)",
            "nullable": true
          },
          "payTerms": {
            "type": "string",
            "description": "付款方式(Payment terms)",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "description": "品牌",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "description": "价格",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "币种",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "量",
            "format": "double",
            "nullable": true
          },
          "charge": {
            "type": "number",
            "description": "金额",
            "format": "double",
            "nullable": true
          },
          "vat": {
            "type": "number",
            "description": "税费",
            "format": "double",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "金额(Total amount)",
            "format": "double",
            "nullable": true
          },
          "exchangeRate": {
            "type": "number",
            "description": "汇率",
            "format": "double",
            "nullable": true
          },
          "expPayDate": {
            "type": "string",
            "description": "预计付款日期(Expected payment date)",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "截至日期",
            "format": "date-time",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "交付日期",
            "format": "date-time",
            "nullable": true
          },
          "accounted": {
            "type": "string",
            "description": "是否已作帐",
            "nullable": true
          },
          "payed": {
            "type": "string",
            "description": "是否付款(Payment complete)",
            "nullable": true
          },
          "payedAmount": {
            "type": "number",
            "description": "已付款金额",
            "format": "double",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "最近付款日期",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "description": "最近更新日期",
            "format": "date-time",
            "nullable": true
          },
          "alloctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchInvoicesAlloctionModel"
            },
            "description": "Alloctions",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PurchInvoicesViewModel"
      },
      "QpExtensions": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "Relational:ColumnName: [QP_EXTENSIONS].[CONTRACT]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 合同号",
            "nullable": true
          },
          "lot": {
            "type": "integer",
            "description": "Relational:ColumnName: [QP_EXTENSIONS].[LOT]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: int\r\n\r\n含义: 合同批次号",
            "format": "int32"
          },
          "extNumber": {
            "type": "integer",
            "description": "Relational:ColumnName: [QP_EXTENSIONS].[EXT_NUMBER]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: int\r\n\r\n含义: 延期点价编号",
            "format": "int32"
          },
          "extDate": {
            "type": "string",
            "description": "Relational:ColumnName: [QP_EXTENSIONS].[EXT_DATE]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: 延期点价日期",
            "format": "date-time",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Relational:ColumnName: [QP_EXTENSIONS].[Quantity]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: float\r\n\r\n含义: 延期点价数量",
            "format": "double",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "Relational:ColumnName: [QP_EXTENSIONS].[Price]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: money\r\n\r\n含义: 价格",
            "format": "double",
            "nullable": true
          },
          "oldFixationEnd": {
            "type": "string",
            "description": "Relational:ColumnName: [QP_EXTENSIONS].[Old_Fixation_end]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: 原最后点价日",
            "format": "date-time",
            "nullable": true
          },
          "newFixationEnd": {
            "type": "string",
            "description": "Relational:ColumnName: [QP_EXTENSIONS].[New_Fixation_end]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: 新最后点价日",
            "format": "date-time",
            "nullable": true
          },
          "oldPrompt": {
            "type": "string",
            "description": "Relational:ColumnName: [QP_EXTENSIONS].[old_prompt]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: 原合约的LME交割日",
            "format": "date-time",
            "nullable": true
          },
          "newPrompt": {
            "type": "string",
            "description": "Relational:ColumnName: [QP_EXTENSIONS].[new_prompt]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: datetime\r\n\r\n含义: 新合约的LME交割日",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [QP_EXTENSIONS]\r\n<para></para>\r\n含义: QP_EXTENSIONS--延期点价"
      },
      "QpExtensionsIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QpExtensions"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Quotationcodes": {
        "type": "object",
        "properties": {
          "quotationCode": {
            "type": "string",
            "description": "Relational:ColumnName: [QUOTATIONCODES].[quotation_code]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(10)\r\n\r\n含义: LME连续具体合约及行情价类型代码 (主键)",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Relational:ColumnName: [QUOTATIONCODES].[comment]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 备注",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "Relational:ColumnName: [QUOTATIONCODES].[currency]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(3)\r\n\r\n含义: 币种 (ref currencies)",
            "nullable": true
          },
          "metal": {
            "type": "string",
            "description": "Relational:ColumnName: [QUOTATIONCODES].[metal]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 金属品类兼LME标准合约 (ref metals)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [QUOTATIONCODES]\r\n<para></para>\r\n含义: QUOTATIONCODES--LME连续具体合约及行情价类型"
      },
      "QuotationcodesIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Quotationcodes"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RatRole": {
        "type": "object",
        "properties": {
          "privileges": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "角色的权限列表",
            "nullable": true
          },
          "roleCode": {
            "type": "string",
            "description": "Relational:ColumnName: [Rat_Role].[RoleCode]\r\n<br>\r\nIsRequired: True, ValueGenerated: None, IsPrimaryKey: True, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 角色名 (主键)",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Relational:ColumnName: [Rat_Role].[Description]\r\n<br>\r\nIsRequired: False, ValueGenerated: None, IsPrimaryKey: False, IsAlternateKey: False, IsForeignKey: False, Relational_ColumnType: varchar(50)\r\n\r\n含义: 备注",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Relational:TableName: [Rat_Role]\r\n<para></para>\r\n含义: Rat_Role--角色"
      },
      "RatRoleIPaginatedListResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPaginationResult"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RatRole"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "VatCodesModel": {
        "type": "object",
        "properties": {
          "vatCode": {
            "type": "string",
            "description": "code",
            "nullable": true
          },
          "vatDescription": {
            "type": "string",
            "description": "ps",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Account",
      "description": "账户"
    },
    {
      "name": "ArcVatNumbers",
      "description": "ArcVatNumbers"
    },
    {
      "name": "Book",
      "description": "业务组合(book/market/portfolio) 类似策略加核算主体"
    },
    {
      "name": "Charges",
      "description": "Charges"
    },
    {
      "name": "Cities",
      "description": "城市"
    },
    {
      "name": "Commodities",
      "description": "物料"
    },
    {
      "name": "Comptes",
      "description": "用户"
    },
    {
      "name": "ContractNumbers",
      "description": "合同号"
    },
    {
      "name": "Counterparts",
      "description": "公司"
    },
    {
      "name": "CounterpartsVat",
      "description": "CounterpartsVat"
    },
    {
      "name": "Currency",
      "description": "币种"
    },
    {
      "name": "Entities",
      "description": "arc的实体"
    },
    {
      "name": "Enum",
      "description": "枚举"
    },
    {
      "name": "Fxcodes",
      "description": "外汇汇率来源"
    },
    {
      "name": "InvoiceAlloctions",
      "description": "Invoice Alloctions"
    },
    {
      "name": "Invoices",
      "description": "销售发票"
    },
    {
      "name": "InvoicesDocs",
      "description": "InvoicesDocs"
    },
    {
      "name": "Lcs",
      "description": "信用证"
    },
    {
      "name": "Lots",
      "description": "ContractLots"
    },
    {
      "name": "MaterialAllocationsDetails",
      "description": "MaterialAllocationsDetails"
    },
    {
      "name": "Metals",
      "description": "金属品类兼LME标准合约"
    },
    {
      "name": "PaymentTerms",
      "description": "PaymentTerms"
    },
    {
      "name": "PayTerms",
      "description": "PayTerms"
    },
    {
      "name": "PhysicalContracts",
      "description": "合同"
    },
    {
      "name": "Pricings",
      "description": "点价"
    },
    {
      "name": "PurchInvoices",
      "description": "采购发票"
    },
    {
      "name": "QpExtensions",
      "description": "延期点价"
    },
    {
      "name": "Quotationcodes",
      "description": "LME连续具体合约及行情价类型"
    },
    {
      "name": "Role",
      "description": "角色"
    },
    {
      "name": "VatCodes",
      "description": "VatCodes"
    },
    {
      "name": "WeatherForecast",
      "description": "试验, 请忽略"
    },
    {
      "name": "Error",
      "description": "Exception Handler"
    }
  ]
}
